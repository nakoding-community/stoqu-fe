{"version":3,"file":"static/js/8.48aacd30.chunk.js","mappings":"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","sources":["components/ConditionalWrapper.js","pages/OrderPage.js","utils/firebase.js"],"sourcesContent":["const ConditionalWrapper = ({ condition, wrapper, children }) => {\n  return condition ? wrapper(children) : children;\n};\n\nexport default ConditionalWrapper;\n","import { useEffect, useRef, useState } from 'react';\nimport startCase from 'lodash/startCase';\nimport moment from 'moment';\nimport { useDebounce } from 'use-debounce';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { getFirestore, collection, query, getDocs, getDoc, limit, doc, onSnapshot } from 'firebase/firestore';\nimport { useTheme } from '@mui/material/styles';\n\n// @mui\nimport {\n  Box,\n  Card,\n  Table,\n  Button,\n  TableBody,\n  Container,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  TableCell,\n  TableHead,\n  Stack,\n  TextField,\n  InputAdornment,\n  IconButton,\n  TableSortLabel,\n  Tooltip,\n} from '@mui/material';\nimport { firebaseApp } from '../utils/firebase';\n// redux\n\n// hooks\nimport useSettings from '../hooks/useSettings';\n\nimport Page from '../components/Page';\nimport Iconify from '../components/Iconify';\nimport Scrollbar from '../components/Scrollbar';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport Label from '../components/Label';\nimport InfiniteCombobox from '../components/combobox/InfiniteCombobox';\nimport ConditionalWrapper from '../components/ConditionalWrapper';\n\nimport { getOrders, readOrder } from '../client/ordersClient';\n\nimport { convertToRupiah, getStatusColor } from '../utils/helperUtils';\nimport useDashboardCount from '../hooks/useDashboardCount';\n\nimport '../styles/animation.css';\n\nexport default function OrderPage() {\n  const unsubscribe = useRef(null);\n\n  const [orderBy, setOrderBy] = useState('created_at');\n  const [order, setOrder] = useState('desc');\n\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { themeStretch } = useSettings();\n  const { totalOrder } = useDashboardCount();\n\n  const [search, setSearch] = useState('');\n  const [searchDebounce] = useDebounce(search, 300);\n\n  const [orders, setOrders] = useState([]);\n  const [paginationMeta, setPaginationMeta] = useState(null);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowPerPage] = useState(10);\n\n  const [filterStatus, setFilterStatus] = useState('');\n\n  const [listenToFirebase, setListenToFirebase] = useState(true);\n\n  const rowsPerPageChangeHandler = (e) => {\n    setRowPerPage(e.target.value);\n  };\n\n  const onChangeSearchHandler = (e) => {\n    setListenToFirebase(false);\n    setSearch(e.target.value);\n    setPage(0);\n  };\n\n  const pageChangeHandler = (e, newValue) => {\n    setListenToFirebase(false);\n    setPage(newValue);\n  };\n\n  const onSortHandler = (property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setListenToFirebase(false);\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const navigateToDetailPageHandler = (id, isRead) => {\n    navigate(`/dashboard/order/${id}`);\n    // eslint-disable-next-line no-unused-expressions\n    !isRead && readOrder(id);\n  };\n\n  const getDataFirebase = async () => {\n    const db = getFirestore(firebaseApp);\n    const q = query(collection(db, 'dashboard-order'), limit(rowsPerPage));\n    const r = doc(db, 'total-order', 'total-order');\n    const querySnapshot2 = await getDoc(r);\n    const unsubscribeFirebase = onSnapshot(q, (querySnapshot) => {\n      const orders = [];\n      querySnapshot.forEach((doc) => {\n        orders.push(doc.data());\n      });\n      setOrders(orders);\n    });\n\n    setPaginationMeta({\n      count: querySnapshot2.data().TotalOrder,\n    });\n\n    unsubscribe.current = unsubscribeFirebase;\n  };\n\n  const appendSortQuery = () => {\n    return {\n      [order === 'asc' ? 'ascField' : 'dscField']: orderBy,\n    };\n  };\n\n  const getOrdersHandler = async () => {\n    if (listenToFirebase) {\n      getDataFirebase();\n    } else {\n      const query = {\n        page: page + 1,\n        pageSize: rowsPerPage,\n        search,\n        filterStatus,\n        ...(order && appendSortQuery()),\n      };\n\n      const { data, meta } = await getOrders(query);\n      setOrders(data || []);\n      setPaginationMeta(meta?.info);\n    }\n  };\n\n  const onChangeStatusHandler = (e) => {\n    setListenToFirebase(false);\n    setFilterStatus(e?.id);\n    setPage(0);\n  };\n\n  const checkShowNotifUnReadIndicator = (isRead) => {\n    return !isRead;\n  };\n\n  useEffect(() => {\n    getOrdersHandler();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rowsPerPage, page, searchDebounce, filterStatus, order]);\n\n  useEffect(() => {\n    if (!listenToFirebase) {\n      // eslint-disable-next-line no-unused-expressions\n      unsubscribe?.current && unsubscribe?.current();\n    }\n\n    return () => {\n      // eslint-disable-next-line no-unused-expressions\n      unsubscribe?.current && unsubscribe?.current();\n    };\n  }, [listenToFirebase, unsubscribe]);\n\n  return (\n    <Page title=\"Pesanan\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Pesanan\"\n          links={[]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={`/dashboard/order/new`}\n              startIcon={<Iconify icon=\"eva:plus-fill\" />}\n            >\n              Tambah\n            </Button>\n          }\n          useBadge\n          badgeCount={totalOrder}\n        />\n\n        <Card>\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ py: 2.5, px: 3 }}>\n            <InfiniteCombobox\n              label=\"Status\"\n              useStaticOption\n              staticOptions={[\n                { id: 'progress', label: 'Progress' },\n                { id: 'pending', label: 'Pending' },\n                { id: 'complete', label: 'Complete' },\n                { id: 'canceled', label: 'Canceled' },\n              ]}\n              onChange={onChangeStatusHandler}\n              sx={{ width: 300, marginRight: '20px' }}\n            />\n            <TextField\n              value={search}\n              onChange={onChangeSearchHandler}\n              placeholder=\"Cari pesanan...\"\n              sx={{ width: '100%' }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Iconify icon={'eva:search-fill'} sx={{ color: 'text.disabled', width: 20, height: 20 }} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Stack>\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 720 }}>\n              <Table>\n                <TableHeadComponent orderBy={orderBy} order={order} onSortHandler={onSortHandler} />\n                <TableBody>\n                  {orders.map((row, index) => (\n                    <TableRow key={row?.ID || row.id}>\n                      <TableCell>\n                        {checkShowNotifUnReadIndicator(row?.IsRead !== undefined ? row?.IsRead : row?.isRead) && (\n                          <Tooltip title=\"Belum dibaca\">\n                            <div className=\"unread-circle\" style={{ backgroundColor: theme.palette.error.main }} />\n                          </Tooltip>\n                        )}\n                      </TableCell>\n                      <TableCell>{index + 1 + page * rowsPerPage}</TableCell>\n                      <TableCell>{moment(row?.createdAt).format('YYYY-MM-DD HH:mm:ss')}</TableCell>\n                      <TableCell>\n                        {(row?.TrxType || row?.trxType) && (\n                          <Label\n                            variant={'ghost'}\n                            color={(row?.TrxType || row?.trxType) === 'in' ? 'success' : 'error'}\n                          >\n                            {row?.TrxType || row?.trxType}\n                          </Label>\n                        )}\n                      </TableCell>\n                      <TableCell>{row?.Code || row?.code}</TableCell>\n                      <TableCell>{row?.CustomerName || row.customerName}</TableCell>\n                      <TableCell>{row?.PhoneNumber || row.phoneNumber}</TableCell>\n                      <TableCell>\n                        <Label variant={'ghost'} color=\"success\">\n                          {convertToRupiah(row?.FinalPrice || row.finalPrice || 0)}\n                        </Label>\n                      </TableCell>\n                      <TableCell>\n                        {(row?.Status || row?.status) && (\n                          <Label variant={'ghost'} color={getStatusColor(row?.Status || row?.status)}>\n                            {startCase(row?.Status || row?.status)}\n                          </Label>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        {(row?.StockStatus || row?.stockStatus) && (\n                          <Label\n                            variant={'ghost'}\n                            color={(row?.StockStatus || row?.stockStatus) !== 'normal' ? 'error' : 'success'}\n                          >\n                            {startCase(row?.StockStatus || row?.stockStatus)}\n                          </Label>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <Tooltip title=\"Edit Pesanan\">\n                          <IconButton\n                            size=\"small\"\n                            color=\"warning\"\n                            onClick={() => navigateToDetailPageHandler(row?.ID || row?.id, row?.isRead)}\n                          >\n                            <Iconify icon=\"eva:edit-fill\" />\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <Box sx={{ position: 'relative' }}>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={paginationMeta?.count || 0}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={pageChangeHandler}\n              onRowsPerPageChange={rowsPerPageChangeHandler}\n            />\n          </Box>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n\nconst TableHeadComponent = ({ orderBy, order, onSortHandler }) => {\n  const onClickSortHandler = (property) => {\n    onSortHandler(property);\n  };\n\n  const headCells = [\n    {\n      id: '',\n      label: '',\n      withSort: false,\n    },\n    {\n      id: 'no',\n      label: 'No',\n      withSort: false,\n    },\n    {\n      id: 'created_at',\n      label: 'Tanggal',\n      withSort: true,\n    },\n    {\n      id: 'trx_type',\n      label: 'Tipe Transaksi',\n      withSort: true,\n    },\n    {\n      id: 'code',\n      label: 'Kode',\n      withSort: true,\n    },\n    {\n      id: 'customer_name',\n      label: 'Customer',\n      withSort: true,\n    },\n    {\n      id: 'phone_number',\n      label: 'No. Handphone',\n      withSort: true,\n    },\n    {\n      id: 'final_price',\n      label: 'Harga',\n      withSort: true,\n    },\n    {\n      id: 'status',\n      label: 'Status',\n      withSort: true,\n    },\n    {\n      id: 'stock_status',\n      label: 'Stok Status',\n      withSort: true,\n    },\n    {\n      id: 'action',\n      label: 'Aksi',\n      withSort: false,\n    },\n  ];\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell key={headCell.id}>\n            <ConditionalWrapper\n              condition={headCell.withSort}\n              wrapper={(children) => (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={() => onClickSortHandler(headCell.id)}\n                >\n                  {children}\n                </TableSortLabel>\n              )}\n            >\n              {headCell.label}\n            </ConditionalWrapper>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/database';\n\n// Production\nlet config = {\n  apiKey: 'AIzaSyC4E9iVVm-10JjUrvMSEGRVtLHkwQTIon8',\n  authDomain: 'inamawangi-59d3e.firebaseapp.com',\n  projectId: 'inamawangi-59d3e',\n  storageBucket: 'inamawangi-59d3e.appspot.com',\n  messagingSenderId: '282036610633',\n  appId: '1:282036610633:web:9753a4fe48938f89080198',\n  measurementId: 'G-FRLWBBZBB4',\n};\n\n// Development\nif (process.env.REACT_APP_ENV !== 'prod') {\n  config = {\n    apiKey: 'AIzaSyCZrt6XSYjH1ncDCQSo1n6Rz4DgiNk__tw',\n    authDomain: 'inamawangi-d1766.firebaseapp.com',\n    projectId: 'inamawangi-d1766',\n    storageBucket: 'inamawangi-d1766.appspot.com',\n    messagingSenderId: '512541535572',\n    appId: '1:512541535572:web:936057206e1b0b7202ecc1',\n    measurementId: 'G-SFXTFEVE73',\n  };\n}\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nexport const firebaseApp = firebase.app();\n"],"names":["condition","wrapper","children","OrderPage","unsubscribe","useRef","useState","orderBy","setOrderBy","order","setOrder","theme","useTheme","navigate","useNavigate","themeStretch","useSettings","totalOrder","useDashboardCount","search","setSearch","useDebounce","searchDebounce","orders","setOrders","paginationMeta","setPaginationMeta","page","setPage","rowsPerPage","setRowPerPage","filterStatus","setFilterStatus","listenToFirebase","setListenToFirebase","getDataFirebase","db","getFirestore","firebaseApp","q","query","collection","limit","r","doc","getDoc","querySnapshot2","unsubscribeFirebase","onSnapshot","querySnapshot","forEach","push","data","count","TotalOrder","current","getOrdersHandler","pageSize","getOrders","meta","info","useEffect","Page","title","Container","maxWidth","HeaderBreadcrumbs","heading","links","action","Button","variant","component","RouterLink","to","startIcon","Iconify","icon","useBadge","badgeCount","Card","Stack","direction","alignItems","sx","py","px","InfiniteCombobox","label","useStaticOption","staticOptions","id","onChange","e","width","marginRight","TextField","value","target","placeholder","InputProps","startAdornment","InputAdornment","position","color","height","Scrollbar","TableContainer","minWidth","Table","TableHeadComponent","onSortHandler","property","isAsc","TableBody","map","row","index","TableRow","TableCell","isRead","undefined","IsRead","Tooltip","className","style","backgroundColor","palette","error","main","moment","createdAt","format","TrxType","trxType","Label","Code","code","CustomerName","customerName","PhoneNumber","phoneNumber","convertToRupiah","FinalPrice","finalPrice","Status","status","getStatusColor","startCase","StockStatus","stockStatus","IconButton","size","onClick","readOrder","navigateToDetailPageHandler","ID","Box","TablePagination","rowsPerPageOptions","onPageChange","newValue","onRowsPerPageChange","TableHead","withSort","headCell","ConditionalWrapper","TableSortLabel","active","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase"],"sourceRoot":""}