{"version":3,"file":"static/js/26.6473c0f1.chunk.js","mappings":"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","sources":["components/ConditionalWrapper.js","components/combobox/ComboboxUnits.js","components/modal/Modal.js","hooks/useForm.js","client/convertionsClient.js","components/modal/settings-convertion/ModalCreateEditConvertion.js","pages/SettingsConversionTypePage.js"],"sourcesContent":["const ConditionalWrapper = ({ condition, wrapper, children }) => {\n  return condition ? wrapper(children) : children;\n};\n\nexport default ConditionalWrapper;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { TextField, Autocomplete } from '@mui/material';\nimport { getUnits } from '../../client/unitsClient';\n\nconst ComboboxUnits = ({ onChange, defaultValue, label = 'Unit' }) => {\n  const [units, setUnits] = useState([]);\n\n  const options = useCallback(() => {\n    return units?.map((unit) => {\n      return {\n        label: unit?.unit,\n        id: unit?.id,\n      };\n    });\n  }, [units]);\n\n  const defaultAutoCompleteValue = options()?.find((option) => option.id === defaultValue);\n\n  const getUnitsHandler = async () => {\n    const { data } = await getUnits();\n    if (data) {\n      setUnits(data);\n    }\n  };\n\n  const onChangeHandler = (e, newValue) => {\n    onChange(newValue);\n  };\n\n  useEffect(() => {\n    getUnitsHandler();\n  }, []);\n\n  return units?.length > 0 ? (\n    <Autocomplete\n      disablePortal\n      id=\"combo-box-units\"\n      options={options()}\n      onChange={onChangeHandler}\n      defaultValue={defaultAutoCompleteValue}\n      renderInput={(params) => <TextField {...params} label={label} />}\n    />\n  ) : (\n    <></>\n  );\n};\n\nexport default ComboboxUnits;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DialogTitle, Box, Button } from '@mui/material';\n\nimport { DialogAnimate } from '../animate';\n\nimport Label from '../Label';\nimport Iconify from '../Iconify';\n\nModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nfunction Modal({ title, open, onClose, maxWidth, children, badgeCount, useBadge, headerButtonComponent }) {\n  return (\n    <DialogAnimate open={open} onClose={onClose} maxWidth={maxWidth}>\n      <Box sx={{ flexGrow: 1, display: 'flex', alignItems: 'center' }}>\n        <DialogTitle sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n          <Box>\n            {title}{' '}\n            {useBadge && (\n              <Label variant=\"ghost\" color=\"error\" sx={{ marginLeft: '8px' }}>\n                {badgeCount}\n              </Label>\n            )}\n          </Box>\n          {headerButtonComponent && headerButtonComponent}\n          {/* {headerButton && (\n            <Button\n              variant=\"outlined\"\n              startIcon={<Iconify icon={headerButton?.iconName} />}\n              onClick={(e) => headerButton?.onClick && headerButton?.onClick(e)}\n            >\n              {headerButton?.text}\n            </Button>\n          )} */}\n        </DialogTitle>\n      </Box>\n\n      {children}\n    </DialogAnimate>\n  );\n}\n\nexport default Modal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      return {\n        ...state,\n        [action.inputId]: action.value,\n      };\n\n    case 'SET_DATA':\n      return {\n        ...state,\n        ...action.inputData,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs) => {\n  const [formState, dispatch] = useReducer(formReducer, initialInputs);\n\n  const inputChangeHandler = useCallback((id, value) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputData,\n    });\n  }, []);\n\n  return [formState, inputChangeHandler, setFormData];\n};\n","import axios from '../utils/axios';\n\nexport const creteConvertion = (body) => {\n  return axios.post('convertions', body);\n};\n\nexport const getConvertions = (params) => {\n  return axios.get('convertions', { params });\n};\n\nexport const editConvertion = (id, body) => {\n  return axios.put(`convertions/${id}`, body);\n};\n\nexport const deleteConvertion = (id) => {\n  return axios.delete(`convertions/${id}`);\n};\n","import React, { useEffect, useState } from 'react';\n// import parseInt from 'lodash/parseInt';\nimport { Stack, TextField, DialogActions, Button } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { toast } from 'react-toastify';\n\nimport Modal from '../Modal';\nimport ComboboxUnits from '../../combobox/ComboboxUnits';\n\nimport { createType, editType } from '../../../client/typesClient';\nimport { useForm } from '../../../hooks/useForm';\nimport InfiniteCombobox from '../../combobox/InfiniteCombobox';\n\nimport { creteConvertion, editConvertion } from '../../../client/convertionsClient';\n\nexport const ModalCreateEditConvertion = ({ open, onClose, editData, editId, getConvertionsHandler }) => {\n  const title = editData ? 'Edit Tipe Konversi' : 'Tambah Tipe Konversi';\n\n  return (\n    <Modal title={title} open={open} onClose={onClose}>\n      <DialogForm onClose={onClose} editData={editData} editId={editId} getConvertionsHandler={getConvertionsHandler} />\n    </Modal>\n  );\n};\n\nconst DialogForm = ({ onClose, editData, editId, getConvertionsHandler }) => {\n  const [formState, inputChangeHandler, setFormData] = useForm(initialFormInput);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const { origin, destination, total, labelText } = formState;\n\n  const isButtonDisabled = origin === '' || destination === '' || total === '';\n\n  const changeLabelText = (newObjValue) => {\n    inputChangeHandler('labelText', {\n      ...labelText,\n      ...newObjValue,\n    });\n  };\n\n  const submitModalHandler = async (e) => {\n    setIsSubmitting(true);\n\n    e.preventDefault();\n    const body = {\n      ...formState,\n      total: parseFloat(total),\n    };\n\n    delete body.labelText;\n\n    const { isSuccess } = editData ? await editType(editId, body) : await creteConvertion(body);\n    if (isSuccess) {\n      toast.success(`Berhasil ${editData ? 'mengubah' : 'menambahkan'} tipe konversi`);\n      onClose();\n      getConvertionsHandler();\n    }\n\n    setIsSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (editData) {\n      setFormData(editData);\n    }\n  }, [editData, setFormData]);\n\n  return (\n    <Stack component=\"form\" onSubmit={submitModalHandler}>\n      <Stack spacing={3} sx={{ p: 3 }}>\n        <InfiniteCombobox\n          value={origin}\n          label=\"Tipe Awal (*)\"\n          type=\"units\"\n          onChange={(e) => {\n            inputChangeHandler('origin', e?.id);\n            changeLabelText({ origin: e?.label });\n          }}\n          labelText={labelText?.origin}\n        />\n        <InfiniteCombobox\n          value={destination}\n          label=\"Tipe Akhir (*)\"\n          type=\"units\"\n          onChange={(e) => {\n            inputChangeHandler('destination', e?.id);\n            changeLabelText({ destination: e?.label });\n          }}\n          labelText={labelText?.destination}\n        />\n        <TextField\n          value={total}\n          type=\"number\"\n          id=\"value\"\n          label=\"Total Konversi (*)\"\n          variant=\"outlined\"\n          onChange={(e) => inputChangeHandler('total', e.target.value)}\n        />\n      </Stack>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Close\n        </Button>\n\n        <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} disabled={isButtonDisabled}>\n          Save\n        </LoadingButton>\n      </DialogActions>\n    </Stack>\n  );\n};\n\nconst initialFormInput = {\n  origin: '',\n  destination: '',\n  total: '',\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Card,\n  Table,\n  Button,\n  Tooltip,\n  TableBody,\n  IconButton,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  TableCell,\n  TableHead,\n  Stack,\n  TextField,\n  InputAdornment,\n  Container,\n  TableSortLabel,\n} from '@mui/material';\n\nimport { useConfirm } from 'material-ui-confirm';\nimport { useDebounce } from 'use-debounce';\n\nimport { toast } from 'react-toastify';\nimport Iconify from '../components/Iconify';\nimport Scrollbar from '../components/Scrollbar';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\n\nimport Page from '../components/Page';\nimport useSettings from '../hooks/useSettings';\n\nimport { getConvertions, deleteConvertion } from '../client/convertionsClient';\nimport ConditionalWrapper from '../components/ConditionalWrapper';\nimport { ModalCreateEditConvertion } from '../components/modal/settings-convertion/ModalCreateEditConvertion';\n\nfunction SettingsConversionTypePage() {\n  const { themeStretch } = useSettings();\n\n  const confirm = useConfirm();\n\n  const [orderBy, setOrderBy] = useState('created_at');\n  const [order, setOrder] = useState('desc');\n\n  const [search, setSearch] = useState('');\n  const [searchDebounce] = useDebounce(search, 300);\n\n  const [editData, setEditData] = useState(null);\n  const [editId, setEditId] = useState(null);\n\n  const [convertions, setConvertions] = useState([]);\n  const [paginationMeta, setPaginationMeta] = useState(null);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowPerPage] = useState(5);\n  const [showModal, setShowModal] = useState(false);\n\n  const showModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n    setEditData(null);\n    setEditId(null);\n  };\n\n  const rowsPerPageChangeHandler = (e) => {\n    setRowPerPage(e.target.value);\n  };\n\n  const onChangeSearchHandler = (e) => {\n    setSearch(e.target.value);\n    setPage(0);\n  };\n\n  const pageChangeHandler = (e, newValue) => {\n    setPage(newValue);\n  };\n\n  const onSortHandler = (property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const onClickEditHandler = (data) => {\n    setEditData({\n      origin: data?.origin,\n      destination: data?.destination,\n      total: data?.total,\n      labelText: {\n        origin: data?.origin,\n        destination: data?.destination,\n      },\n    });\n    setEditId(data?.id);\n    showModalHandler();\n  };\n\n  const appendSortQuery = () => {\n    return {\n      [order === 'asc' ? 'ascField' : 'dscField']: orderBy,\n    };\n  };\n\n  const getConvertionsHandler = async () => {\n    const query = {\n      page: page + 1,\n      pageSize: rowsPerPage,\n      search,\n      ...(order && appendSortQuery()),\n    };\n\n    const { data, meta } = await getConvertions(query);\n    setConvertions(data || []);\n    setPaginationMeta(meta?.info);\n  };\n\n  const onClickDeleteHandler = (id) => {\n    confirm().then(async () => {\n      const { isSuccess } = await deleteConvertion(id);\n      if (isSuccess) {\n        toast.success('Berhasil menghapus tipe konversi');\n        getConvertionsHandler();\n      }\n    });\n  };\n\n  useEffect(() => {\n    getConvertionsHandler();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rowsPerPage, page, searchDebounce, order]);\n\n  return (\n    <Page title=\"Tipe Konversi\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Tipe Konversi\"\n          action={\n            <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />} onClick={showModalHandler}>\n              Tambah\n            </Button>\n          }\n          badgeCount={paginationMeta?.count || 0}\n          useBadge\n        />\n\n        <Card>\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ py: 2.5, px: 3 }}>\n            <TextField\n              value={search}\n              onChange={onChangeSearchHandler}\n              placeholder=\"Cari...\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Iconify icon={'eva:search-fill'} sx={{ color: 'text.disabled', width: 20, height: 20 }} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Stack>\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 720 }}>\n              <Table>\n                <TableHeadComponent orderBy={orderBy} order={order} onSortHandler={onSortHandler} />\n                <TableBody>\n                  {convertions?.map((row, index) => (\n                    <TableRow key={row.id}>\n                      <TableCell>{index + 1}</TableCell>\n                      <TableCell>{row?.origin}</TableCell>\n                      <TableCell>{row?.destination}</TableCell>\n                      <TableCell>{row?.total}</TableCell>\n                      <TableCell>\n                        <Tooltip title=\"Edit Tipe\">\n                          <IconButton size=\"small\" color=\"warning\" onClick={() => onClickEditHandler(row)}>\n                            <Iconify icon=\"eva:edit-fill\" />\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Delete Tipe\">\n                          <IconButton size=\"small\" color=\"error\" onClick={() => onClickDeleteHandler(row?.id)}>\n                            <Iconify icon=\"eva:trash-2-outline\" />\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <Box sx={{ position: 'relative' }}>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={paginationMeta?.count || 0}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={pageChangeHandler}\n              onRowsPerPageChange={rowsPerPageChangeHandler}\n            />\n          </Box>\n        </Card>\n      </Container>\n      <ModalCreateEditConvertion\n        open={showModal}\n        onClose={closeModalHandler}\n        editData={editData}\n        editId={editId}\n        getConvertionsHandler={getConvertionsHandler}\n      />\n    </Page>\n  );\n}\n\nconst TableHeadComponent = ({ orderBy, order, onSortHandler }) => {\n  const onClickSortHandler = (property) => {\n    onSortHandler(property);\n  };\n\n  const headCells = [\n    {\n      id: 'no',\n      label: 'No',\n      withSort: false,\n    },\n    {\n      id: 'origin',\n      label: 'Tipe Awal',\n      withSort: true,\n    },\n    {\n      id: 'destination',\n      label: 'Tipe Akhir',\n      withSort: true,\n    },\n    {\n      id: 'total',\n      label: 'Total Konversi',\n      withSort: true,\n    },\n    {\n      id: 'action',\n      label: 'Aksi',\n      withSort: false,\n    },\n  ];\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell key={headCell.id}>\n            <ConditionalWrapper\n              condition={headCell.withSort}\n              wrapper={(children) => (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={() => onClickSortHandler(headCell.id)}\n                >\n                  {children}\n                </TableSortLabel>\n              )}\n            >\n              {headCell.label}\n            </ConditionalWrapper>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default SettingsConversionTypePage;\n"],"names":["condition","wrapper","children","onChange","defaultValue","label","useState","units","setUnits","options","useCallback","map","unit","id","defaultAutoCompleteValue","find","option","getUnitsHandler","getUnits","data","useEffect","length","disablePortal","e","newValue","renderInput","params","title","open","onClose","maxWidth","badgeCount","useBadge","headerButtonComponent","sx","flexGrow","display","alignItems","justifyContent","width","variant","color","marginLeft","formReducer","state","action","type","inputId","value","inputData","useForm","initialInputs","useReducer","formState","dispatch","creteConvertion","body","axios","deleteConvertion","ModalCreateEditConvertion","editData","editId","getConvertionsHandler","Modal","DialogForm","initialFormInput","inputChangeHandler","setFormData","isSubmitting","setIsSubmitting","origin","destination","total","labelText","isButtonDisabled","changeLabelText","newObjValue","submitModalHandler","preventDefault","parseFloat","editType","isSuccess","toast","Stack","component","onSubmit","spacing","p","InfiniteCombobox","TextField","target","DialogActions","Button","onClick","LoadingButton","loading","disabled","TableHeadComponent","orderBy","order","onSortHandler","TableHead","TableRow","withSort","headCell","TableCell","ConditionalWrapper","TableSortLabel","active","direction","property","themeStretch","useSettings","confirm","useConfirm","setOrderBy","setOrder","search","setSearch","useDebounce","searchDebounce","setEditData","setEditId","convertions","setConvertions","paginationMeta","setPaginationMeta","page","setPage","rowsPerPage","setRowPerPage","showModal","setShowModal","showModalHandler","query","pageSize","meta","info","Page","Container","HeaderBreadcrumbs","heading","startIcon","Iconify","icon","count","Card","py","px","placeholder","InputProps","startAdornment","InputAdornment","position","height","Scrollbar","TableContainer","minWidth","Table","TableBody","row","index","Tooltip","IconButton","size","then","Box","TablePagination","rowsPerPageOptions","onPageChange","onRowsPerPageChange"],"sourceRoot":""}