{"version":3,"file":"static/js/765.1ef2eb0d.chunk.js","mappings":"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","sources":["client/currenciesClient.js","components/ConditionalWrapper.js","components/modal/Modal.js","constant/queryKey.js","hooks/useForm.js","components/modal/product/ModalCreateEditProduct.js","pages/ProductPage.js","api/useProductsClient.js"],"sourcesContent":["import axios from '../utils/axios';\n\nexport const getDollarToIdrPrice = (body) => {\n  return axios.post('currencies/convert', body);\n};\n\nexport const getCurrencies = () => {\n  return axios.get('currencies');\n};\n\nexport const editCurrencies = (id, body) => {\n  return axios.put(`currencies/${id}`, body);\n};\n","const ConditionalWrapper = ({ condition, wrapper, children }) => {\n  return condition ? wrapper(children) : children;\n};\n\nexport default ConditionalWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DialogTitle, Box, Button } from '@mui/material';\n\nimport { DialogAnimate } from '../animate';\n\nimport Label from '../Label';\nimport Iconify from '../Iconify';\n\nModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nfunction Modal({ title, open, onClose, maxWidth, children, badgeCount, useBadge, headerButtonComponent }) {\n  return (\n    <DialogAnimate open={open} onClose={onClose} maxWidth={maxWidth}>\n      <Box sx={{ flexGrow: 1, display: 'flex', alignItems: 'center' }}>\n        <DialogTitle sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n          <Box>\n            {title}{' '}\n            {useBadge && (\n              <Label variant=\"ghost\" color=\"error\" sx={{ marginLeft: '8px' }}>\n                {badgeCount}\n              </Label>\n            )}\n          </Box>\n          {headerButtonComponent && headerButtonComponent}\n          {/* {headerButton && (\n            <Button\n              variant=\"outlined\"\n              startIcon={<Iconify icon={headerButton?.iconName} />}\n              onClick={(e) => headerButton?.onClick && headerButton?.onClick(e)}\n            >\n              {headerButton?.text}\n            </Button>\n          )} */}\n        </DialogTitle>\n      </Box>\n\n      {children}\n    </DialogAnimate>\n  );\n}\n\nexport default Modal;\n","const KEY = {\n  attribute: {\n    types: {\n      all: 'types',\n      detail: 'type',\n    },\n    brands: {\n      all: 'brands',\n      detail: 'brand',\n    },\n  },\n  products: {\n    all: 'products',\n  },\n};\n\nexport default KEY;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      return {\n        ...state,\n        [action.inputId]: action.value,\n      };\n\n    case 'SET_DATA':\n      return {\n        ...state,\n        ...action.inputData,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs) => {\n  const [formState, dispatch] = useReducer(formReducer, initialInputs);\n\n  const inputChangeHandler = useCallback((id, value) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputData,\n    });\n  }, []);\n\n  return [formState, inputChangeHandler, setFormData];\n};\n","import React, { useEffect, useState } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport parseInt from 'lodash/parseInt';\nimport { Stack, TextField, DialogActions, Button } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { toast } from 'react-toastify';\nimport Modal from '../Modal';\nimport { createProducts, editProduct } from '../../../client/productsClient';\nimport { useForm } from '../../../hooks/useForm';\nimport InfiniteCombobox from '../../combobox/InfiniteCombobox';\nimport { getDollarToIdrPrice } from '../../../client/currenciesClient';\nimport KEY from '../../../constant/queryKey';\n\nexport const ModalCreateEditProduct = ({ open, onClose, editData, editId }) => {\n  const title = editData ? 'Edit Produk' : 'Tambah Produk';\n\n  return (\n    <Modal title={title} open={open} onClose={onClose}>\n      <DialogForm onClose={onClose} editData={editData} editId={editId} />\n    </Modal>\n  );\n};\n\nconst DialogForm = ({ onClose, editData, editId }) => {\n  const queryClient = useQueryClient();\n  const [formState, inputChangeHandler, setFormData] = useForm(initialFormInput);\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const { brandId, variantId, typeId, priceIdr, priceUsd, estimatePriceIdr, labelText } = formState;\n\n  const isButtonDisabled =\n    brandId === '' ||\n    variantId === '' ||\n    typeId === '' ||\n    priceIdr === '' ||\n    priceUsd === '' ||\n    estimatePriceIdr === '';\n\n  const changeLabelText = (newObjValue) => {\n    inputChangeHandler('labelText', {\n      ...formState.labelText,\n      ...newObjValue,\n    });\n  };\n\n  const submitModalHandler = async (e) => {\n    setIsSubmitting(true);\n\n    e.preventDefault();\n    const body = {\n      ...formState,\n      priceIdr: parseInt(formState.priceIdr),\n      priceUsd: parseInt(formState.priceUsd),\n    };\n\n    delete body.estimatePriceIdr;\n    delete body.labelText;\n\n    if (editData) {\n      delete body.labelText;\n    }\n\n    const { isSuccess } = editData ? await editProduct(editId, body) : await createProducts(body);\n    if (isSuccess) {\n      toast.success(`Berhasil ${editData ? 'mengubah' : 'menambahkan'} produk`);\n      onClose();\n      queryClient.invalidateQueries([KEY.products.all]);\n    }\n\n    setIsSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (editData) {\n      setFormData(editData);\n    }\n  }, [editData, setFormData]);\n\n  useEffect(() => {\n    const getIdrEstimatePrice = async () => {\n      const { data } = await getDollarToIdrPrice({ usd: parseInt(priceUsd) });\n      if (data) {\n        inputChangeHandler('estimatePriceIdr', data?.idr);\n      }\n    };\n\n    if (priceUsd) {\n      getIdrEstimatePrice();\n    }\n  }, [priceUsd, inputChangeHandler]);\n\n  return (\n    <Stack component=\"form\" onSubmit={submitModalHandler}>\n      <Stack spacing={3} sx={{ p: 3 }}>\n        <InfiniteCombobox\n          value={brandId}\n          label=\"Cari Brand (*)\"\n          type=\"brands\"\n          onChange={(e) => {\n            inputChangeHandler('brandId', e.id);\n            inputChangeHandler('variantId', '');\n            changeLabelText({ brand: e?.label });\n          }}\n          disabled={editData !== null}\n          labelText={labelText?.brand}\n        />\n        <InfiniteCombobox\n          value={variantId}\n          label=\"Cari Varian (*)\"\n          type=\"variants\"\n          onChange={(e) => {\n            inputChangeHandler('variantId', e.id);\n            changeLabelText({ variant: e?.label });\n          }}\n          disabled={editData !== null}\n          additionalQuery={{ filterBrandId: brandId }}\n          labelText={labelText?.variant}\n        />\n        <InfiniteCombobox\n          value={typeId}\n          label=\"Cari Tipe (*)\"\n          type=\"types\"\n          onChange={(e) => {\n            inputChangeHandler('typeId', e.id);\n            changeLabelText({ type: e?.label });\n          }}\n          disabled={editData !== null}\n          labelText={labelText?.type}\n        />\n        <TextField\n          type=\"number\"\n          label=\"Harga USD\"\n          variant=\"outlined\"\n          value={priceUsd}\n          onChange={(e) => inputChangeHandler('priceUsd', e.target.value)}\n        />\n        <TextField type=\"number\" label=\"Estimasi Harga\" variant=\"outlined\" value={estimatePriceIdr} disabled />\n        <TextField\n          type=\"number\"\n          label=\"Harga Akhir (*)\"\n          variant=\"outlined\"\n          value={priceIdr}\n          onChange={(e) => inputChangeHandler('priceIdr', e.target.value)}\n        />\n      </Stack>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Close\n        </Button>\n\n        <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} disabled={isButtonDisabled}>\n          Save\n        </LoadingButton>\n      </DialogActions>\n    </Stack>\n  );\n};\n\nconst initialFormInput = {\n  brandId: '',\n  variantId: '',\n  typeId: '',\n  priceUsd: '',\n  priceIdr: '',\n  estimatePriceIdr: '',\n  labelText: {},\n};\n","import { useState, useEffect } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport {\n  Box,\n  Card,\n  Table,\n  Button,\n  TableBody,\n  Container,\n  IconButton,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  TableCell,\n  TableHead,\n  Stack,\n  TextField,\n  InputAdornment,\n  TableSortLabel,\n  Tooltip,\n} from '@mui/material';\n\n// hooks\nimport { useDebounce } from 'use-debounce';\nimport { useConfirm } from 'material-ui-confirm';\nimport { toast } from 'react-toastify';\nimport useSettings from '../hooks/useSettings';\n\n// components\nimport Page from '../components/Page';\nimport Iconify from '../components/Iconify';\nimport Scrollbar from '../components/Scrollbar';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport InfiniteCombobox from '../components/combobox/InfiniteCombobox';\nimport ConditionalWrapper from '../components/ConditionalWrapper';\nimport Label from '../components/Label';\n\nimport { ModalCreateEditProduct } from '../components/modal/product/ModalCreateEditProduct';\n\n// client\nimport { deleteProduct } from '../client/productsClient';\nimport { convertToRupiah } from '../utils/helperUtils';\n\nimport KEY from '../constant/queryKey';\nimport { useProducts } from '../api/useProductsClient';\n\nexport default function ProductApp() {\n  const { themeStretch } = useSettings();\n  const queryClient = useQueryClient();\n\n  const confirm = useConfirm();\n\n  const [orderBy, setOrderBy] = useState('created_at');\n  const [order, setOrder] = useState('desc');\n\n  const [search, setSearch] = useState('');\n  const [searchDebounce] = useDebounce(search, 300);\n\n  const [editData, setEditData] = useState(null);\n  const [editId, setEditId] = useState(null);\n\n  const [products, setProducts] = useState([]);\n  const [paginationMeta, setPaginationMeta] = useState(null);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowPerPage] = useState(5);\n  const [showModal, setShowModal] = useState(false);\n\n  const [filterBrand, setFilterBrand] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n\n  const showModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n    setEditData(null);\n    setEditId(null);\n  };\n\n  const rowsPerPageChangeHandler = (e) => {\n    setRowPerPage(e.target.value);\n  };\n\n  const onChangeSearchHandler = (e) => {\n    setSearch(e.target.value);\n    setPage(0);\n  };\n\n  const pageChangeHandler = (e, newValue) => {\n    setPage(newValue);\n  };\n\n  const onChangeFilterBrandHandler = (e) => {\n    setFilterBrand(e?.label);\n    setPage(0);\n  };\n\n  const onChangeFilterValueHandler = (e) => {\n    setFilterValue(e?.label);\n    setPage(0);\n  };\n\n  const onSortHandler = (property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const onClickEditHandler = (data) => {\n    setEditData({\n      brandId: data?.brandId,\n      variantId: data?.variantId,\n      typeId: data?.typeId,\n      priceUsd: data?.priceUsd,\n      priceIdr: data?.priceIdr,\n      estimatePriceIdr: '',\n      labelText: {\n        brand: data?.brand?.brand,\n        variant: data?.variant?.variant,\n        type: `${data?.type?.value} ${data?.type?.unit?.unit}`,\n      },\n    });\n    setEditId(data?.id);\n    showModalHandler();\n  };\n\n  const appendSortQuery = () => {\n    return {\n      [order === 'asc' ? 'ascField' : 'dscField']: orderBy,\n    };\n  };\n\n  const onClickDeleteHandler = (id) => {\n    confirm().then(async () => {\n      const { isSuccess } = await deleteProduct(id);\n      if (isSuccess) {\n        toast.success('Berhasil menghapus produk');\n        queryClient.invalidateQueries([KEY.products.all]);\n      }\n    });\n  };\n\n  const queryParams = {\n    page: page + 1,\n    pageSize: rowsPerPage,\n    search: searchDebounce,\n    filterBrand,\n    filterValue,\n    ...(order && appendSortQuery()),\n  };\n\n  const { data } = useProducts(queryParams);\n\n  useEffect(() => {\n    if (data) {\n      setProducts(data?.data);\n      setPaginationMeta(data?.meta?.info);\n    }\n  }, [data]);\n\n  return (\n    <Page title=\"Produk\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Produk\"\n          useBadge\n          badgeCount={paginationMeta?.count || 0}\n          action={\n            <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />} onClick={showModalHandler}>\n              Tambah\n            </Button>\n          }\n        />\n\n        <Card>\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ py: 2.5, px: 3 }}>\n            <InfiniteCombobox\n              label=\"Cari Brand\"\n              type=\"brands\"\n              sx={{ width: '300px', marginRight: '20px' }}\n              onChange={onChangeFilterBrandHandler}\n              labelText={filterBrand}\n            />\n            <InfiniteCombobox\n              label=\"Cari Tipe\"\n              type=\"types\"\n              sx={{ width: '300px', marginRight: '20px' }}\n              onChange={onChangeFilterValueHandler}\n              labelText={filterValue}\n            />\n\n            <TextField\n              value={search}\n              onChange={onChangeSearchHandler}\n              placeholder=\"Cari...\"\n              sx={{ width: '100%' }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Iconify icon={'eva:search-fill'} sx={{ color: 'text.disabled', width: 20, height: 20 }} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Stack>\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 720 }}>\n              <Table>\n                <TableHeadComponent orderBy={orderBy} order={order} onSortHandler={onSortHandler} />\n                <TableBody>\n                  {products?.map((row, index) => (\n                    <TableRow key={row?.id}>\n                      <TableCell>{index + 1 + page * rowsPerPage}</TableCell>\n                      <TableCell>{row?.code}</TableCell>\n                      <TableCell>{row?.brand?.brand}</TableCell>\n                      <TableCell>{row?.variant?.variant}</TableCell>\n                      <TableCell>{`${row?.type?.value} ${row?.type?.unit?.unit}`}</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>\n                        <Label variant={'ghost'} color={'success'}>\n                          {convertToRupiah(row?.priceIdr)}\n                        </Label>\n                      </TableCell>\n                      <TableCell>\n                        <Tooltip title=\"Edit Produk\">\n                          <IconButton size=\"small\" color=\"warning\" onClick={() => onClickEditHandler(row)}>\n                            <Iconify icon=\"eva:edit-fill\" />\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Delete Produk\">\n                          <IconButton size=\"small\" color=\"error\" onClick={() => onClickDeleteHandler(row?.id)}>\n                            <Iconify icon=\"eva:trash-2-outline\" />\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <Box sx={{ position: 'relative' }}>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={paginationMeta?.count || 0}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={pageChangeHandler}\n              onRowsPerPageChange={rowsPerPageChangeHandler}\n            />\n          </Box>\n        </Card>\n      </Container>\n      <ModalCreateEditProduct open={showModal} onClose={closeModalHandler} editData={editData} editId={editId} />\n    </Page>\n  );\n}\n\nconst TableHeadComponent = ({ orderBy, order, onSortHandler }) => {\n  const onClickSortHandler = (property) => {\n    onSortHandler(property);\n  };\n\n  const headCells = [\n    {\n      id: 'no',\n      label: 'No',\n      withSort: false,\n    },\n    {\n      id: 'code',\n      label: 'Kode',\n      withSort: true,\n    },\n    {\n      id: 'brand',\n      label: 'Brand',\n      withSort: true,\n    },\n    {\n      id: 'variant',\n      label: 'Varian',\n      withSort: true,\n    },\n    {\n      id: 'type',\n      label: 'Tipe',\n      withSort: true,\n    },\n    {\n      id: 'supplier_name',\n      label: 'Nama Supplier',\n      withSort: false,\n    },\n    {\n      id: 'code_unique',\n      label: 'Kode Unik',\n      withSort: false,\n    },\n    {\n      id: 'price_idr',\n      label: 'Harga',\n      withSort: true,\n    },\n    {\n      id: 'action',\n      label: 'Aksi',\n      withSort: false,\n    },\n  ];\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell key={headCell.id}>\n            <ConditionalWrapper\n              condition={headCell.withSort}\n              wrapper={(children) => (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={() => onClickSortHandler(headCell.id)}\n                >\n                  {children}\n                </TableSortLabel>\n              )}\n            >\n              {headCell.label}\n            </ConditionalWrapper>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { getProducts } from '../client/productsClient';\n\nimport KEY from '../constant/queryKey';\n\nconst useProducts = (queryParams) => {\n  const fetchProducts = ({ signal }) => {\n    return getProducts(queryParams, signal);\n  };\n\n  return useQuery([KEY.products.all, queryParams], fetchProducts, {\n    staleTime: 5 * 60 * 1000,\n  });\n};\n\nexport { useProducts };\n"],"names":["getDollarToIdrPrice","body","axios","getCurrencies","editCurrencies","id","condition","wrapper","children","title","open","onClose","maxWidth","badgeCount","useBadge","headerButtonComponent","sx","flexGrow","display","alignItems","justifyContent","width","variant","color","marginLeft","attribute","types","all","detail","brands","products","formReducer","state","action","type","inputId","value","inputData","useForm","initialInputs","useReducer","formState","dispatch","useCallback","ModalCreateEditProduct","editData","editId","Modal","DialogForm","queryClient","useQueryClient","initialFormInput","inputChangeHandler","setFormData","useState","isSubmitting","setIsSubmitting","brandId","variantId","typeId","priceIdr","priceUsd","estimatePriceIdr","labelText","isButtonDisabled","changeLabelText","newObjValue","submitModalHandler","e","preventDefault","parseInt","editProduct","createProducts","isSuccess","toast","invalidateQueries","KEY","useEffect","getIdrEstimatePrice","usd","data","idr","Stack","component","onSubmit","spacing","p","InfiniteCombobox","label","onChange","brand","disabled","additionalQuery","filterBrandId","TextField","target","DialogActions","Button","onClick","LoadingButton","loading","ProductApp","themeStretch","useSettings","confirm","useConfirm","orderBy","setOrderBy","order","setOrder","search","setSearch","useDebounce","searchDebounce","setEditData","setEditId","setProducts","paginationMeta","setPaginationMeta","page","setPage","rowsPerPage","setRowPerPage","showModal","setShowModal","filterBrand","setFilterBrand","filterValue","setFilterValue","showModalHandler","queryParams","useQuery","signal","getProducts","staleTime","useProducts","pageSize","meta","info","Page","Container","HeaderBreadcrumbs","heading","count","startIcon","Iconify","icon","Card","direction","py","px","marginRight","placeholder","InputProps","startAdornment","InputAdornment","position","height","Scrollbar","TableContainer","minWidth","Table","TableHeadComponent","onSortHandler","property","TableBody","map","row","index","TableRow","TableCell","code","unit","Label","convertToRupiah","Tooltip","IconButton","size","onClickEditHandler","then","deleteProduct","Box","TablePagination","rowsPerPageOptions","onPageChange","newValue","onRowsPerPageChange","TableHead","withSort","headCell","ConditionalWrapper","TableSortLabel","active"],"sourceRoot":""}