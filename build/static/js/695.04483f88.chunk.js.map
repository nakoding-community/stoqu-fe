{"version":3,"file":"static/js/695.04483f88.chunk.js","mappings":"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","sources":["components/ConditionalWrapper.js","components/combobox/ComboboxUnits.js","components/modal/Modal.js","hooks/useForm.js","components/modal/settings-user/ModalCreateEditUser.js","pages/SettingsUserPage.js"],"sourcesContent":["const ConditionalWrapper = ({ condition, wrapper, children }) => {\n  return condition ? wrapper(children) : children;\n};\n\nexport default ConditionalWrapper;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { TextField, Autocomplete } from '@mui/material';\nimport { getUnits } from '../../client/unitsClient';\n\nconst ComboboxUnits = ({ onChange, defaultValue, label = 'Unit' }) => {\n  const [units, setUnits] = useState([]);\n\n  const options = useCallback(() => {\n    return units?.map((unit) => {\n      return {\n        label: unit?.unit,\n        id: unit?.id,\n      };\n    });\n  }, [units]);\n\n  const defaultAutoCompleteValue = options()?.find((option) => option.id === defaultValue);\n\n  const getUnitsHandler = async () => {\n    const { data } = await getUnits();\n    if (data) {\n      setUnits(data);\n    }\n  };\n\n  const onChangeHandler = (e, newValue) => {\n    onChange(newValue);\n  };\n\n  useEffect(() => {\n    getUnitsHandler();\n  }, []);\n\n  return units?.length > 0 ? (\n    <Autocomplete\n      disablePortal\n      id=\"combo-box-units\"\n      options={options()}\n      onChange={onChangeHandler}\n      defaultValue={defaultAutoCompleteValue}\n      renderInput={(params) => <TextField {...params} label={label} />}\n    />\n  ) : (\n    <></>\n  );\n};\n\nexport default ComboboxUnits;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DialogTitle, Box, Button } from '@mui/material';\n\nimport { DialogAnimate } from '../animate';\n\nimport Label from '../Label';\nimport Iconify from '../Iconify';\n\nModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nfunction Modal({ title, open, onClose, maxWidth, children, badgeCount, useBadge, headerButtonComponent }) {\n  return (\n    <DialogAnimate open={open} onClose={onClose} maxWidth={maxWidth}>\n      <Box sx={{ flexGrow: 1, display: 'flex', alignItems: 'center' }}>\n        <DialogTitle sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n          <Box>\n            {title}{' '}\n            {useBadge && (\n              <Label variant=\"ghost\" color=\"error\" sx={{ marginLeft: '8px' }}>\n                {badgeCount}\n              </Label>\n            )}\n          </Box>\n          {headerButtonComponent && headerButtonComponent}\n          {/* {headerButton && (\n            <Button\n              variant=\"outlined\"\n              startIcon={<Iconify icon={headerButton?.iconName} />}\n              onClick={(e) => headerButton?.onClick && headerButton?.onClick(e)}\n            >\n              {headerButton?.text}\n            </Button>\n          )} */}\n        </DialogTitle>\n      </Box>\n\n      {children}\n    </DialogAnimate>\n  );\n}\n\nexport default Modal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      return {\n        ...state,\n        [action.inputId]: action.value,\n      };\n\n    case 'SET_DATA':\n      return {\n        ...state,\n        ...action.inputData,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs) => {\n  const [formState, dispatch] = useReducer(formReducer, initialInputs);\n\n  const inputChangeHandler = useCallback((id, value) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputData,\n    });\n  }, []);\n\n  return [formState, inputChangeHandler, setFormData];\n};\n","import React, { useEffect, useState } from 'react';\nimport parseInt from 'lodash/parseInt';\nimport { Stack, TextField, DialogActions, Button } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { toast } from 'react-toastify';\n\nimport Modal from '../Modal';\nimport ComboboxUnits from '../../combobox/ComboboxUnits';\n\nimport { createUser, editUser } from '../../../client/usersClient';\nimport { useForm } from '../../../hooks/useForm';\nimport InfiniteCombobox from '../../combobox/InfiniteCombobox';\n\nexport const ModalCreateEditUser = ({ open, onClose, editData, editId, getUsersHandler }) => {\n  const title = editData ? 'Edit USer' : 'Tambah User';\n\n  return (\n    <Modal title={title} open={open} onClose={onClose}>\n      <DialogForm onClose={onClose} editData={editData} editId={editId} getUsersHandler={getUsersHandler} />\n    </Modal>\n  );\n};\n\nconst DialogForm = ({ onClose, editData, editId, getUsersHandler }) => {\n  const [formState, inputChangeHandler, setFormData] = useForm(initialFormInput);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const { email, name, password, phoneNumber, roleId, labelText } = formState;\n\n  const isButtonDisabled =\n    email === '' || name === '' || phoneNumber === '' || roleId === '' || (editData ? false : password === '');\n\n  const changeLabelText = (newObjValue) => {\n    inputChangeHandler('labelText', {\n      ...labelText,\n      ...newObjValue,\n    });\n  };\n\n  const submitModalHandler = async (e) => {\n    setIsSubmitting(true);\n\n    e.preventDefault();\n    const body = {\n      ...formState,\n    };\n\n    // delete labelText\n    if (body?.labelText) {\n      delete body?.labelText;\n    }\n\n    // when password is null when edit, delete it from payload\n    if (editData) {\n      if (!body?.password) {\n        delete body?.password;\n      }\n    }\n\n    const { isSuccess } = editData ? await editUser(editId, body) : await createUser(body);\n    if (isSuccess) {\n      toast.success(`Berhasil ${editData ? 'mengubah' : 'menambahkan'} user`);\n      onClose();\n      getUsersHandler();\n    }\n\n    setIsSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (editData) {\n      setFormData(editData);\n    }\n  }, [editData, setFormData]);\n\n  return (\n    <Stack component=\"form\" onSubmit={submitModalHandler}>\n      <Stack spacing={3} sx={{ p: 3 }}>\n        <InfiniteCombobox\n          value={roleId}\n          label=\"Role (*)\"\n          type=\"roles\"\n          onChange={(e) => {\n            inputChangeHandler('roleId', e?.id);\n            changeLabelText({ role: e?.label });\n          }}\n          labelText={labelText?.role}\n        />\n        <TextField\n          value={name}\n          type=\"text\"\n          id=\"name\"\n          label=\"Nama (*)\"\n          variant=\"outlined\"\n          onChange={(e) => inputChangeHandler('name', e.target.value)}\n        />\n        <TextField\n          value={email}\n          type=\"email\"\n          id=\"email\"\n          label=\"Email (*)\"\n          variant=\"outlined\"\n          onChange={(e) => inputChangeHandler('email', e.target.value)}\n        />\n        <TextField\n          value={phoneNumber}\n          type=\"number\"\n          id=\"no\"\n          label=\"No Hp (*)\"\n          variant=\"outlined\"\n          onChange={(e) => inputChangeHandler('phoneNumber', e.target.value)}\n        />\n        <TextField\n          value={password}\n          type=\"text\"\n          id=\"password\"\n          label={`Password ${editData ? '' : '(*)'}`}\n          variant=\"outlined\"\n          onChange={(e) => inputChangeHandler('password', e.target.value)}\n        />\n      </Stack>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Close\n        </Button>\n\n        <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} disabled={isButtonDisabled}>\n          Save\n        </LoadingButton>\n      </DialogActions>\n    </Stack>\n  );\n};\n\nconst initialFormInput = {\n  email: '',\n  name: '',\n  password: '',\n  phoneNumber: '',\n  roleId: '',\n};\n","import { useEffect, useState } from 'react';\nimport { useConfirm } from 'material-ui-confirm';\n\nimport { useDebounce } from 'use-debounce';\n// @mui\nimport {\n  Box,\n  Card,\n  Table,\n  Button,\n  TableBody,\n  Container,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  TableCell,\n  TableHead,\n  Stack,\n  TextField,\n  InputAdornment,\n  IconButton,\n  TableSortLabel,\n  Tooltip,\n} from '@mui/material';\nimport { toast } from 'react-toastify';\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport Iconify from '../components/Iconify';\nimport Scrollbar from '../components/Scrollbar';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport ConditionalWrapper from '../components/ConditionalWrapper';\n\n// sections\nimport { getUsers, deleteUser } from '../client/usersClient';\nimport { ModalCreateEditUser } from '../components/modal/settings-user/ModalCreateEditUser';\nimport InfiniteCombobox from '../components/combobox/InfiniteCombobox';\n\nexport default function SettingsUserPage() {\n  const confirm = useConfirm();\n\n  const [orderBy, setOrderBy] = useState('created_at');\n  const [order, setOrder] = useState('desc');\n\n  const [search, setSearch] = useState('');\n  const [searchDebounce] = useDebounce(search, 300);\n\n  const { themeStretch } = useSettings();\n  const [users, setUsers] = useState([]);\n  const [paginationMeta, setPaginationMeta] = useState(null);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowPerPage] = useState(5);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [editData, setEditData] = useState(null);\n  const [editId, setEditId] = useState(null);\n\n  const [roleId, setRoleId] = useState(null);\n  const [roleLabel, setRoleLabel] = useState(null);\n\n  const showModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n    setEditData(null);\n    setEditId(null);\n  };\n\n  const onClickEditHandler = (data) => {\n    setEditData({\n      email: data?.email,\n      name: data?.name,\n      password: data?.password,\n      phoneNumber: data?.userProfile?.phone,\n      roleId: data?.role?.id,\n      labelText: {\n        role: data?.role?.role,\n      },\n    });\n    setEditId(data?.id);\n    showModalHandler();\n  };\n\n  const onSortHandler = (property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const appendSortQuery = () => {\n    return {\n      [order === 'asc' ? 'ascField' : 'dscField']: orderBy,\n    };\n  };\n\n  const getUsersHandler = async () => {\n    const query = {\n      page: page + 1,\n      pageSize: rowsPerPage,\n      search,\n      filterRole: roleLabel,\n      ...(order && appendSortQuery()),\n    };\n\n    const { data, meta } = await getUsers(query);\n    setUsers(data || []);\n    setPaginationMeta(meta?.info || {});\n  };\n\n  const rowsPerPageChangeHandler = (e) => {\n    setRowPerPage(e.target.value);\n  };\n\n  const onChangeSearchHandler = (e) => {\n    setSearch(e.target.value);\n    setPage(0);\n  };\n\n  const pageChangeHandler = (e, newValue) => {\n    setPage(newValue);\n  };\n\n  const onClickDeleteHandler = (id) => {\n    confirm().then(async () => {\n      const { isSuccess } = await deleteUser(id);\n      if (isSuccess) {\n        toast.success('Berhasil menghapus user');\n        getUsersHandler();\n      }\n    });\n  };\n\n  useEffect(() => {\n    getUsersHandler();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rowsPerPage, page, searchDebounce, order, roleLabel]);\n\n  return (\n    <Page title=\"Pengaturan Pengguna\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Pengaturan Pengguna\"\n          action={\n            <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />} onClick={showModalHandler}>\n              Tambah\n            </Button>\n          }\n          badgeCount={paginationMeta?.count || 0}\n          useBadge\n        />\n\n        <Card>\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ py: 2.5, px: 3 }}>\n            <TextField\n              value={search}\n              onChange={onChangeSearchHandler}\n              placeholder=\"Search user...\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Iconify icon={'eva:search-fill'} sx={{ color: 'text.disabled', width: 20, height: 20 }} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <InfiniteCombobox\n              value={roleId}\n              label=\"Role (*)\"\n              type=\"roles\"\n              onChange={(e) => {\n                setRoleId(e?.id);\n                setRoleLabel(e?.label);\n              }}\n              labelText={roleLabel}\n              sx={{ width: '20%', marginLeft: '16px' }}\n            />\n          </Stack>\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 720 }}>\n              <Table>\n                <TableHeadComponent orderBy={orderBy} order={order} onSortHandler={onSortHandler} />\n                <TableBody>\n                  {users?.map((row, index) => (\n                    <TableRow key={row.id}>\n                      <TableCell>{index + 1 + page * rowsPerPage}</TableCell>\n                      <TableCell>{row?.name}</TableCell>\n                      <TableCell>{row?.email}</TableCell>\n                      <TableCell>{row?.userProfile?.phone}</TableCell>\n                      <TableCell>\n                        <Tooltip title=\"Edit Pengguna\">\n                          <IconButton size=\"small\" color=\"warning\" onClick={() => onClickEditHandler(row)}>\n                            <Iconify icon=\"eva:edit-fill\" />\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Delete Pengguna\">\n                          <IconButton size=\"small\" color=\"error\" onClick={() => onClickDeleteHandler(row?.id)}>\n                            <Iconify icon=\"eva:trash-2-outline\" />\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <Box sx={{ position: 'relative' }}>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={paginationMeta?.count || 0}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={pageChangeHandler}\n              onRowsPerPageChange={rowsPerPageChangeHandler}\n            />\n          </Box>\n        </Card>\n      </Container>\n\n      <ModalCreateEditUser\n        open={showModal}\n        onClose={closeModalHandler}\n        getUsersHandler={getUsersHandler}\n        editData={editData}\n        editId={editId}\n      />\n    </Page>\n  );\n}\n\nconst TableHeadComponent = ({ orderBy, order, onSortHandler }) => {\n  const onClickSortHandler = (property) => {\n    onSortHandler(property);\n  };\n\n  const headCells = [\n    {\n      id: 'no',\n      label: 'No',\n      withSort: false,\n    },\n    {\n      id: 'name',\n      label: 'Nama',\n      withSort: true,\n    },\n    {\n      id: 'email',\n      label: 'Email',\n      withSort: true,\n    },\n    {\n      id: 'phone',\n      label: 'No. Handphone',\n      withSort: true,\n    },\n    {\n      id: 'action',\n      label: 'Aksi',\n      withSort: false,\n    },\n  ];\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell key={headCell.id}>\n            <ConditionalWrapper\n              condition={headCell.withSort}\n              wrapper={(children) => (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={() => onClickSortHandler(headCell.id)}\n                >\n                  {children}\n                </TableSortLabel>\n              )}\n            >\n              {headCell.label}\n            </ConditionalWrapper>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n"],"names":["condition","wrapper","children","onChange","defaultValue","label","useState","units","setUnits","options","useCallback","map","unit","id","defaultAutoCompleteValue","find","option","getUnitsHandler","getUnits","data","useEffect","length","disablePortal","e","newValue","renderInput","params","title","open","onClose","maxWidth","badgeCount","useBadge","headerButtonComponent","sx","flexGrow","display","alignItems","justifyContent","width","variant","color","marginLeft","formReducer","state","action","type","inputId","value","inputData","useForm","initialInputs","useReducer","formState","dispatch","ModalCreateEditUser","editData","editId","getUsersHandler","Modal","DialogForm","initialFormInput","inputChangeHandler","setFormData","isSubmitting","setIsSubmitting","email","name","password","phoneNumber","roleId","labelText","isButtonDisabled","submitModalHandler","preventDefault","body","editUser","createUser","isSuccess","toast","Stack","component","onSubmit","spacing","p","InfiniteCombobox","newObjValue","role","TextField","target","DialogActions","Button","onClick","LoadingButton","loading","disabled","SettingsUserPage","confirm","useConfirm","orderBy","setOrderBy","order","setOrder","search","setSearch","useDebounce","searchDebounce","themeStretch","useSettings","users","setUsers","paginationMeta","setPaginationMeta","page","setPage","rowsPerPage","setRowPerPage","showModal","setShowModal","setEditData","setEditId","setRoleId","roleLabel","setRoleLabel","showModalHandler","query","pageSize","filterRole","getUsers","meta","info","Page","Container","HeaderBreadcrumbs","heading","startIcon","Iconify","icon","count","Card","direction","py","px","placeholder","InputProps","startAdornment","InputAdornment","position","height","Scrollbar","TableContainer","minWidth","Table","TableHeadComponent","onSortHandler","property","TableBody","row","index","TableRow","TableCell","userProfile","phone","Tooltip","IconButton","size","onClickEditHandler","then","deleteUser","Box","TablePagination","rowsPerPageOptions","onPageChange","onRowsPerPageChange","TableHead","withSort","headCell","ConditionalWrapper","TableSortLabel","active"],"sourceRoot":""}