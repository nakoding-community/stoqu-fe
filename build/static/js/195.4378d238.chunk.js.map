{"version":3,"file":"static/js/195.4378d238.chunk.js","mappings":"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","sources":["components/ConditionalWrapper.js","pages/ReportProductPage.js"],"sourcesContent":["const ConditionalWrapper = ({ condition, wrapper, children }) => {\n  return condition ? wrapper(children) : children;\n};\n\nexport default ConditionalWrapper;\n","import moment from 'moment';\nimport { useState, useEffect } from 'react';\nimport DatePicker from '@mui/lab/DatePicker';\nimport { useTheme } from '@mui/material/styles';\n\n// @mui\nimport {\n  Box,\n  Card,\n  Table,\n  Button,\n  TableBody,\n  Container,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  TableCell,\n  TableHead,\n  Stack,\n  TextField,\n  Divider,\n  CircularProgress,\n  Typography,\n  Grid,\n  TableSortLabel,\n} from '@mui/material';\nimport { useDebounce } from 'use-debounce';\nimport axios from 'axios';\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport Iconify from '../components/Iconify';\nimport Scrollbar from '../components/Scrollbar';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport ConditionalWrapper from '../components/ConditionalWrapper';\n\nimport { getOrdersReportSummary } from '../client/ordersClient';\nimport { HOST_API } from '../config';\nimport InfiniteCombobox from '../components/combobox/InfiniteCombobox';\n\nfunction isValidDate(d) {\n  return d instanceof Date && !Number.isNaN(d);\n}\n\nconst RowBrandTemplate = ({ row, index, page, rowsPerPage }) => {\n  return (\n    <TableRow>\n      <TableCell>{index + 1 + page * rowsPerPage}</TableCell>\n      <TableCell>{row?.brandName}</TableCell>\n      <TableCell>{row?.typeName}</TableCell>\n      <TableCell>{row?.count}</TableCell>\n    </TableRow>\n  );\n};\n\nconst RowVariantTemplate = ({ row, index, page, rowsPerPage }) => {\n  return (\n    <TableRow>\n      <TableCell>{index + 1 + page * rowsPerPage}</TableCell>\n      <TableCell>{row?.brandName}</TableCell>\n      <TableCell>{row?.typeName}</TableCell>\n      <TableCell>{row?.variantName}</TableCell>\n      <TableCell>{row?.count}</TableCell>\n    </TableRow>\n  );\n};\n\nconst RowTypeTemplate = ({ row, index, page, rowsPerPage }) => {\n  return (\n    <TableRow>\n      <TableCell>{index + 1 + page * rowsPerPage}</TableCell>\n      <TableCell>{row?.typeName}</TableCell>\n      <TableCell>{row?.count}</TableCell>\n    </TableRow>\n  );\n};\n\nexport default function ReportPage() {\n  const theme = useTheme();\n\n  const { themeStretch } = useSettings();\n\n  const [orderBy, setOrderBy] = useState('created_at');\n  const [order, setOrder] = useState('desc');\n\n  const [search, setSearch] = useState('');\n  const [searchDebounce] = useDebounce(search, 300);\n\n  const [listReport, setListReport] = useState([]);\n  const [paginationMeta, setPaginationMeta] = useState(null);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowPerPage] = useState(5);\n\n  const [dateFilter, setDateFilter] = useState([moment().subtract(7, 'd'), moment()]);\n\n  const [filterType, setFilterType] = useState('brand');\n\n  const rowTemplate = {\n    brand: RowBrandTemplate,\n    variant: RowVariantTemplate,\n    type: RowTypeTemplate,\n  };\n\n  const downloadXLSFile = async () => {\n    const token = localStorage.getItem('accessToken');\n\n    const config = {\n      url: `${HOST_API}/reports/summary-excel`,\n      headers: {\n        'Content-Type': 'blob',\n        Authorization: token !== null ? `Bearer ${token}` : ``,\n      },\n      responseType: 'arraybuffer',\n      params: {\n        start_date: moment(dateFilter[0]).format('YYYY-MM-DD'),\n        end_date: moment(dateFilter[1]).format('YYYY-MM-DD'),\n        category: filterType,\n      },\n    };\n\n    try {\n      const response = await axios(config);\n      const outputFilename = `${\n        // eslint-disable-next-line no-nested-ternary\n        isValidDate(dateFilter[0])\n          ? moment(dateFilter[0]).format('MMMM Do YYYY')\n          : // eslint-disable-next-line prefer-template\n          moment().subtract(7, 'd').format('MMMM Do YYYY') + ' - ' + isValidDate(dateFilter[1])\n          ? moment(dateFilter[1]).format('MMMM Do YYYY')\n          : moment().format('MMMM Do YYYY')\n      }.xlsx`;\n\n      // If you want to download file automatically using link attribute.\n\n      const url = URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', outputFilename);\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      throw Error(error);\n    }\n  };\n\n  const onChangeDateHandler = (newValue, index) => {\n    const newDateFilter = [...dateFilter];\n    newDateFilter[index] = newValue;\n    setDateFilter(newDateFilter);\n    setPage(0);\n  };\n\n  const rowsPerPageChangeHandler = (e) => {\n    setRowPerPage(e.target.value);\n  };\n\n  const pageChangeHandler = (e, newValue) => {\n    setPage(newValue);\n  };\n\n  const onSortHandler = (property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const appendSortQuery = () => {\n    return {\n      [order === 'asc' ? 'ascField' : 'dscField']: orderBy,\n    };\n  };\n\n  const appeendFilterDateQuery = (key) => {\n    return {\n      [key]: moment(key === 'startDate' ? dateFilter[0] : dateFilter[1]).format('YYYY-MM-DD'),\n    };\n  };\n\n  const getOrdersReportSummaryHandler = async () => {\n    const query = {\n      page: page + 1,\n      pageSize: rowsPerPage,\n      category: filterType,\n      search,\n      ...(order && appendSortQuery()),\n      ...(dateFilter?.length === 2 && dateFilter[0] && appeendFilterDateQuery('startDate')),\n      ...(dateFilter?.length === 2 && dateFilter[1] && appeendFilterDateQuery('endDate')),\n    };\n\n    const { data, meta } = await getOrdersReportSummary(query);\n\n    setListReport(data || []);\n    setPaginationMeta(meta?.info);\n  };\n\n  useEffect(() => {\n    getOrdersReportSummaryHandler();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rowsPerPage, page, searchDebounce, order, dateFilter, filterType]);\n\n  return (\n    <Page title=\"Laporan Produk\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs heading=\"Laporan Produk\" useBadge badgeCount={paginationMeta?.count} />\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <Card sx={{ mb: 5 }}>\n              <Stack\n                direction=\"row\"\n                divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\n                sx={{ py: 2 }}\n              >\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ width: 1, minWidth: 200 }}>\n                  <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ position: 'relative' }}>\n                    <Iconify\n                      icon={'ic:round-receipt'}\n                      sx={{ color: theme.palette.info.main, width: 24, height: 24, position: 'absolute' }}\n                    />\n\n                    <CircularProgress\n                      variant=\"determinate\"\n                      value={10}\n                      size={56}\n                      thickness={4}\n                      sx={{ color: theme.palette.info.main, opacity: 0.48 }}\n                    />\n\n                    <CircularProgress\n                      variant=\"determinate\"\n                      value={100}\n                      size={56}\n                      thickness={4}\n                      sx={{ color: 'grey.50016', position: 'absolute', top: 0, left: 0, opacity: 0.48 }}\n                    />\n                  </Stack>\n\n                  <Stack spacing={0.5} sx={{ ml: 2 }}>\n                    <Typography variant=\"h6\">Total Jumlah</Typography>\n\n                    <Typography variant=\"subtitle2\">\n                      {paginationMeta?.count}{' '}\n                      <Box component=\"span\" sx={{ color: 'text.secondary', typography: 'body2' }}>\n                        {filterType}\n                      </Box>\n                    </Typography>\n                  </Stack>\n                </Stack>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n\n        <Card>\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ py: 2.5, px: 3 }}>\n            <DatePicker\n              label=\"Tanggal Mulai\"\n              value={dateFilter[0]}\n              onChange={(newValue) => onChangeDateHandler(newValue, 0)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  fullWidth\n                  sx={{\n                    maxWidth: { md: 300 },\n                    marginRight: '20px',\n                  }}\n                />\n              )}\n            />\n            <DatePicker\n              label=\"Tanggal Selesai\"\n              value={dateFilter[1]}\n              onChange={(newValue) => onChangeDateHandler(newValue, 1)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  fullWidth\n                  sx={{\n                    maxWidth: { md: 300 },\n                    marginRight: '20px',\n                  }}\n                />\n              )}\n            />\n            <InfiniteCombobox\n              value={filterType}\n              label=\"Tipe\"\n              useStaticOption\n              staticOptions={[\n                { id: 'brand', label: 'Brand' },\n                { id: 'variant', label: 'Variant' },\n                { id: 'type', label: 'Tipe' },\n              ]}\n              onChange={(e) => setFilterType(e?.id)}\n              sx={{ width: '100%', marginRight: '20px' }}\n            />\n            <Stack width=\"100%\" direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Button variant=\"contained\" startIcon={<Iconify icon=\"mdi:file-document\" />} onClick={downloadXLSFile}>\n                Export\n              </Button>\n            </Stack>\n          </Stack>\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 720 }}>\n              <Table>\n                <TableHeadComponent orderBy={orderBy} order={order} onSortHandler={onSortHandler} type={filterType} />\n                <TableBody>\n                  {listReport?.map((row, index) => {\n                    const TableRowComponent = rowTemplate[filterType];\n                    return (\n                      <TableRowComponent key={index} row={row} index={index} page={page} rowsPerPage={rowsPerPage} />\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <Box sx={{ position: 'relative' }}>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={paginationMeta?.count || 0}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={pageChangeHandler}\n              onRowsPerPageChange={rowsPerPageChangeHandler}\n            />\n          </Box>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n\nconst TableHeadComponent = ({ orderBy, order, onSortHandler, type }) => {\n  const onClickSortHandler = (property) => {\n    onSortHandler(property);\n  };\n\n  const headCellV2 = {\n    brand: [\n      {\n        id: 'no',\n        label: 'No',\n        withSort: false,\n      },\n      {\n        id: 'brand_name',\n        label: 'Nama Brand',\n        withSort: false,\n      },\n      {\n        id: 'type_name',\n        label: 'Tipe',\n        withSort: false,\n      },\n      {\n        id: 'count',\n        label: 'Jumlah',\n        withSort: false,\n      },\n    ],\n    variant: [\n      {\n        id: 'no',\n        label: 'No',\n        withSort: false,\n      },\n      {\n        id: 'brand_name',\n        label: 'Nama Brand',\n        withSort: false,\n      },\n      {\n        id: 'type_name',\n        label: 'Tipe',\n        withSort: false,\n      },\n      {\n        id: 'variant_name',\n        label: 'Nama Varian',\n        withSort: false,\n      },\n      {\n        id: 'count',\n        label: 'Jumlah',\n        withSort: false,\n      },\n    ],\n    type: [\n      {\n        id: 'no',\n        label: 'No',\n        withSort: false,\n      },\n      {\n        id: 'type_name',\n        label: 'Tipe',\n        withSort: false,\n      },\n      {\n        id: 'count',\n        label: 'Jumlah',\n        withSort: false,\n      },\n    ],\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCellV2[type].map((headCell) => (\n          <TableCell key={headCell.id}>\n            <ConditionalWrapper\n              condition={headCell.withSort}\n              wrapper={(children) => (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={() => onClickSortHandler(headCell.id)}\n                >\n                  {children}\n                </TableSortLabel>\n              )}\n            >\n              {headCell.label}\n            </ConditionalWrapper>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n"],"names":["condition","wrapper","children","isValidDate","d","Date","Number","isNaN","RowBrandTemplate","row","index","page","rowsPerPage","brandName","typeName","count","RowVariantTemplate","variantName","RowTypeTemplate","ReportPage","theme","useTheme","themeStretch","useSettings","useState","orderBy","setOrderBy","order","setOrder","search","useDebounce","searchDebounce","listReport","setListReport","paginationMeta","setPaginationMeta","setPage","setRowPerPage","moment","subtract","dateFilter","setDateFilter","filterType","setFilterType","rowTemplate","brand","variant","type","downloadXLSFile","token","localStorage","getItem","config","url","HOST_API","headers","Authorization","responseType","params","start_date","format","end_date","category","axios","response","outputFilename","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","Error","onChangeDateHandler","newValue","newDateFilter","appeendFilterDateQuery","key","getOrdersReportSummaryHandler","query","pageSize","length","getOrdersReportSummary","meta","info","useEffect","title","maxWidth","heading","useBadge","badgeCount","container","spacing","item","xs","md","sx","mb","direction","divider","orientation","flexItem","borderStyle","py","alignItems","justifyContent","width","minWidth","position","icon","color","palette","main","height","value","size","thickness","opacity","top","left","ml","component","typography","px","label","onChange","renderInput","fullWidth","marginRight","useStaticOption","staticOptions","id","e","startIcon","onClick","TableHeadComponent","onSortHandler","property","map","TableRowComponent","rowsPerPageOptions","onPageChange","onRowsPerPageChange","target","withSort","headCell","active"],"sourceRoot":""}