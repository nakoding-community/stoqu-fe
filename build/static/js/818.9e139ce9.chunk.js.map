{"version":3,"file":"static/js/818.9e139ce9.chunk.js","mappings":"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","sources":["client/brandsClient.js","client/lookupStocksClient.js","client/ordersClient.js","client/productsClient.js","client/typesClient.js","client/unitsClient.js","client/usersClient.js","client/variantsClient.js","components/HeaderBreadcrumbs.js","client/rolesClient.js","components/combobox/InfiniteCombobox.js","hooks/useDeepEffect.js"],"sourcesContent":["import axios from '../utils/axios';\n\nexport const createBrand = (body) => {\n  return axios.post('brands', body);\n};\n\nexport const getBrands = (params, signal) => {\n  return axios.get('brands', { params, signal });\n};\n\nexport const getBrandDetail = (id, params) => {\n  return axios.get(`brands/${id}`, { params });\n};\n\nexport const editBrand = (id, body) => {\n  return axios.put(`brands/${id}`, body);\n};\n\nexport const deleteBrand = (id) => {\n  return axios.delete(`brands/${id}`);\n};\n","import axios from '../utils/axios';\n\nexport const getLookupStocks = (params) => {\n  return axios.get('lookups/stock', { params });\n};\n\nexport const getLookupStocksProduct = (params) => {\n  return axios.get('lookups/order-trx', { params });\n};\n","import axios from '../utils/axios';\n\nexport const getOrders = (params) => {\n  return axios.get('orders', { params });\n};\n\nexport const getOrderDetail = (id, params) => {\n  return axios.get(`orders/${id}`, { params });\n};\n\nexport const getOrdersReport = (params) => {\n  return axios.get('orders/report', { params });\n};\n\nexport const getOrdersReportSummary = (params) => {\n  return axios.get('reports/summary', { params });\n};\n\nexport const downloadOrderXls = (config) => {\n  return axios.get('orders/report/excel', config);\n};\n\nexport const createOrder = (body) => {\n  return axios.post('orders', body);\n};\n\nexport const updateOrder = (id, body) => {\n  return axios.put(`orders/${id}`, body);\n};\n\nexport const createOrderProduct = (body) => {\n  return axios.post('orders/item', body);\n};\n\nexport const deleteOrderProduct = (id) => {\n  return axios.delete(`orders/item/${id}`);\n};\n\nexport const syncProductOrder = (orderId, orderTrxItemId) => {\n  return axios.put(`orders/${orderId}/item-stock-sync/${orderTrxItemId}`);\n};\n\nexport const readOrder = (id) => {\n  return axios.put(`orders/${id}/read`);\n};\n\nexport const cancelOrder = (id) => {\n  return axios.put(`orders/${id}/cancel`);\n};\n","import axios from '../utils/axios';\n\nexport const createProducts = (body) => {\n  return axios.post('products', body);\n};\n\nexport const getProducts = (params) => {\n  return axios.get('products', { params });\n};\n\nexport const editProduct = (id, body) => {\n  return axios.put(`products/${id}`, body);\n};\n\nexport const deleteProduct = (id) => {\n  return axios.delete(`products/${id}`);\n};\n\nexport const searchProductType = (params) => {\n  return axios.get('products/search/type', { params });\n};\n\nexport const getProductCountEstimation = (orderCode, productCode) => {\n  return axios.get(`orders/summaries-total/${orderCode}/${productCode}`);\n};\n","import axios from '../utils/axios';\n\nexport const createType = (body) => {\n  return axios.post('types', body);\n};\n\nexport const getTypes = (params, signal) => {\n  return axios.get('types', { params, signal });\n};\n\nexport const getTypeDetail = (id, params) => {\n  return axios.get(`types/${id}`, { params });\n};\n\nexport const editType = (id, body) => {\n  return axios.put(`types/${id}`, body);\n};\n\nexport const deleteType = (id) => {\n  return axios.delete(`types/${id}`);\n};\n","import axios from '../utils/axios';\n\nexport const getUnits = () => {\n  return axios.get('units');\n};\n","import axios from '../utils/axios';\n\nexport const createUser = (body) => {\n  return axios.post('users', body);\n};\n\nexport const getUsers = (params) => {\n  return axios.get('users', { params });\n};\n\nexport const editUser = (id, body) => {\n  return axios.put(`users/${id}`, body);\n};\n\nexport const deleteUser = (id) => {\n  return axios.delete(`users/${id}`);\n};\n","import axios from '../utils/axios';\n\nexport const getVariants = (params) => {\n  return axios.get('variants', { params });\n};\n\nexport const createVariant = (body) => {\n  return axios.post('variants', body);\n};\n\nexport const editVariant = (id, body) => {\n  return axios.put(`variants/${id}`, body);\n};\n\nexport const deleteVariant = (id) => {\n  return axios.delete(`variants/${id}`);\n};\n","import isString from 'lodash/isString';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\nimport Label from './Label';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n  useBadge: PropTypes.bool,\n};\n\nexport default function HeaderBreadcrumbs({ action, heading, moreLink = '' || [], sx, useBadge, badgeCount }) {\n  return (\n    <Box sx={{ mb: 4, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1, display: 'flex', alignItems: 'center' }}>\n          <Typography variant=\"h4\" sx={{ marginRight: '8px' }}>\n            {heading}\n          </Typography>\n          {useBadge && (\n            <Label variant=\"ghost\" color=\"error\">\n              {badgeCount}\n            </Label>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import axios from '../utils/axios';\n\nexport const getRoles = (params) => {\n  return axios.get('roles', { params });\n};\n","import React, { useEffect, useState, useImperativeHandle, forwardRef, useRef } from 'react';\nimport { useDebounce } from 'use-debounce';\n\nimport { TextField, Autocomplete, Box } from '@mui/material';\n\nimport { getBrands } from '../../client/brandsClient';\nimport { getVariants } from '../../client/variantsClient';\nimport { getTypes } from '../../client/typesClient';\nimport { getOrders } from '../../client/ordersClient';\nimport { getProducts, searchProductType } from '../../client/productsClient';\nimport { getLookupStocks } from '../../client/lookupStocksClient';\nimport { getRoles } from '../../client/rolesClient';\nimport { getUnits } from '../../client/unitsClient';\nimport { getUsers, createUser } from '../../client/usersClient';\nimport { loadMoreValidator } from '../../utils/helperUtils';\nimport { useDeepEffect } from '../../hooks/useDeepEffect';\n\nimport Scrollbar from '../Scrollbar';\n\nconst LIMIT = 10;\n\nconst InfiniteCombobox = React.memo(\n  ({\n    label,\n    type,\n    onChange,\n    value,\n    additionalQuery,\n    useStaticOption,\n    staticOptions,\n    autoFocus,\n    useCreateOnEnter = false,\n    labelText,\n    excludeIds = [],\n    ...other\n  }) => {\n    const [inputValue, setInputValue] = useState('');\n    const [inputValueDebounce] = useDebounce(inputValue, 300);\n\n    const [options, setOptions] = useState(staticOptions || []);\n    const [selectedId, setSelectedId] = useState('');\n    const [totalPage, setTotalPage] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [onLoadMore, setOnLoadMore] = useState(false);\n\n    const selectedValueLabel =\n      (useStaticOption ? staticOptions : options)?.find((option) => option?.id === selectedId)?.label ||\n      labelText ||\n      '';\n\n    let queryFn = () => {};\n    switch (type) {\n      case 'brands':\n        queryFn = getBrands;\n        break;\n      case 'variants':\n        queryFn = getVariants;\n        break;\n      case 'types':\n        queryFn = getTypes;\n        break;\n      case 'orders':\n        queryFn = getOrders;\n        break;\n      case 'products':\n        queryFn = getProducts;\n        break;\n      case 'lookupStocks':\n        queryFn = getLookupStocks;\n        break;\n      case 'roles':\n        queryFn = getRoles;\n        break;\n      case 'units':\n        queryFn = getUnits;\n        break;\n      case 'productTypes':\n        queryFn = searchProductType;\n        break;\n      case 'users':\n        queryFn = getUsers;\n        break;\n      default:\n        break;\n    }\n\n    const getRestructuredOptions = (optionsData) => {\n      if (optionsData?.length === 0) {\n        return [];\n      }\n\n      switch (type) {\n        case 'brands':\n          return optionsData?.map((option) => {\n            return {\n              id: option?.id,\n              label: option?.brand,\n            };\n          });\n        case 'types':\n          return optionsData?.map((option) => {\n            return {\n              id: option?.id,\n              label: `${option?.value} ${option?.unit?.unit}`,\n            };\n          });\n        case 'variants':\n          return optionsData?.map((option) => {\n            return {\n              id: option?.id,\n              label: option?.variant,\n            };\n          });\n        case 'orders':\n        case 'lookupStocks':\n          return optionsData?.map((option) => {\n            return {\n              ...option,\n              id: option?.id,\n              label: option?.code,\n            };\n          });\n        case 'roles':\n          return optionsData?.map((option) => {\n            return {\n              ...option,\n              id: option?.id,\n              label: option?.role,\n            };\n          });\n        case 'products':\n          return optionsData?.map((option) => {\n            return {\n              ...option,\n              id: option?.id,\n              label: `${option?.brand?.brand} - ${option?.variant?.variant} ${option?.type?.value} ${option?.type?.unit?.unit}`,\n            };\n          });\n        case 'units':\n          return optionsData?.map((option) => {\n            return {\n              id: option?.id,\n              label: option?.unit,\n            };\n          });\n        case 'productTypes':\n          return optionsData?.map((option) => {\n            return {\n              ...option,\n              id: option?.id,\n              label: option?.name,\n            };\n          });\n        case 'users':\n          return optionsData?.map((option) => {\n            return {\n              id: option?.id,\n              label: option?.name,\n            };\n          });\n        default:\n          return '';\n      }\n    };\n\n    const getFilteredOptions = (optionsData) => {\n      const newOptions = [...optionsData];\n      const filteredOptions = newOptions?.filter((opt) => {\n        return !excludeIds?.includes(opt?.id);\n      });\n      return filteredOptions;\n    };\n\n    const appendAdditionalQuery = () => {\n      return {\n        ...additionalQuery,\n      };\n    };\n\n    const getOptionsHandler = async () => {\n      const query = {\n        pageSize: LIMIT,\n        page: currentPage,\n        search: inputValue,\n        ...(additionalQuery && appendAdditionalQuery()),\n      };\n\n      const { data, meta } = await queryFn(query);\n\n      const restructuredData = getRestructuredOptions(data || []);\n      const filteredOptions = getFilteredOptions(restructuredData);\n      setOptions(filteredOptions || []);\n      setTotalPage(meta?.info?.totalPage);\n    };\n\n    const loadMoreOptionsHandler = async (page) => {\n      const query = {\n        pageSize: LIMIT,\n        page,\n        search: inputValue,\n        ...(additionalQuery && appendAdditionalQuery()),\n      };\n\n      const { data, meta } = await queryFn(query);\n      if (data) {\n        const restructuredData = getRestructuredOptions(data || []);\n        const filteredOptions = getFilteredOptions(restructuredData);\n        setOptions((prev) => [...prev, ...filteredOptions]);\n        setTotalPage(meta?.info?.totalPage);\n      }\n    };\n\n    const onChangeHandler = (e, newValue) => {\n      onChange(newValue);\n      setSelectedId(newValue?.id);\n    };\n\n    const onInputChangeHandler = (e) => {\n      setInputValue(e?.target?.value);\n      setCurrentPage(1);\n    };\n\n    const getRoleIdCustomers = async () => {\n      const { data } = await getRoles();\n      if (data) {\n        return data?.find((user) => user?.role === 'customer')?.id;\n      }\n    };\n\n    const onKeyDownHandler = async (e) => {\n      if (useCreateOnEnter) {\n        if (e.code === 'Enter') {\n          if (type === 'users') {\n            const roleId = await getRoleIdCustomers();\n            const { data } = await createUser({ roleId, name: e.target.value });\n            if (data) {\n              getOptionsHandler();\n            }\n          }\n        }\n      }\n    };\n\n    const onScrollHandler = (e) => {\n      const target = e.currentTarget;\n\n      if (currentPage < totalPage && !onLoadMore) {\n        loadMoreValidator(target, 30, async () => {\n          setOnLoadMore(true);\n          await loadMoreOptionsHandler(currentPage + 1);\n          setCurrentPage(currentPage + 1);\n          setOnLoadMore(false);\n        });\n      }\n    };\n\n    const onOpenHandler = () => {\n      setIsOpen(true);\n      setOptions(staticOptions || []);\n      if (useStaticOption) {\n        setOptions(staticOptions);\n      } else {\n        getOptionsHandler();\n      }\n    };\n\n    const onCloseHandler = () => {\n      setIsOpen(false);\n      setCurrentPage(1);\n      setOptions([]);\n      setInputValue('');\n    };\n\n    useDeepEffect(() => {\n      if (isOpen) {\n        getOptionsHandler();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [inputValueDebounce]);\n\n    useEffect(() => {\n      setSelectedId(value);\n    }, [value]);\n\n    useEffect(() => {\n      // to hit next data if scroll is not visible\n      if (isOpen) {\n        setTimeout(async () => {\n          const listBox = document.querySelector('#listBox .simplebar-content-wrapper');\n          const isScrollVisible = listBox?.scrollHeight > listBox?.clientHeight;\n          if (!isScrollVisible && currentPage < totalPage) {\n            setOnLoadMore(true);\n            await loadMoreOptionsHandler(currentPage + 1);\n            setCurrentPage(currentPage + 1);\n            setOnLoadMore(false);\n          }\n        }, 250);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isOpen]);\n\n    return (\n      <Autocomplete\n        id=\"combo-box-demo\"\n        // inputValue={inputValue}\n        onOpen={onOpenHandler}\n        onClose={onCloseHandler}\n        noOptionsText={\n          useCreateOnEnter ? 'No options found, press enter button to create a new user' : 'No options found'\n        }\n        onInputChange={onInputChangeHandler}\n        options={options}\n        onChange={onChangeHandler}\n        renderInput={(params) => (\n          <TextField {...params} label={label} autoFocus={autoFocus} onKeyDown={onKeyDownHandler} />\n        )}\n        renderOption={(props, option) => {\n          return (\n            <Box {...props} component=\"li\" key={`${option?.id}-${option?.label}-${props?.['data-option-index']}`}>\n              {option?.label}\n            </Box>\n          );\n        }}\n        value={selectedValueLabel}\n        ListboxProps={{\n          onScroll: onScrollHandler,\n          id: 'listBox',\n        }}\n        ListboxComponent={ListBox}\n        {...other}\n      />\n    );\n  }\n);\n\nconst ListBox = forwardRef(\n  // eslint-disable-next-line prefer-arrow-callback\n  function ListBoxBase(props, ref) {\n    const { children, ...rest } = props;\n\n    const innerRef = useRef(null);\n\n    useImperativeHandle(ref, () => innerRef.current);\n\n    return (\n      <Scrollbar\n        {...rest}\n        ref={innerRef}\n        // eslint-disable-next-line jsx-a11y/aria-role\n        role=\"list-box\"\n      >\n        {children}\n      </Scrollbar>\n    );\n  }\n);\n\nInfiniteCombobox.whyDidYouRender = true;\n\nexport default InfiniteCombobox;\n","import { useEffect, useRef } from 'react';\nimport isEqual from 'lodash/isEqual';\n\nexport const useDeepEffect = (effectFunc, deps) => {\n  const isFirst = useRef(true);\n  const prevDeps = useRef(deps);\n\n  useEffect(() => {\n    const isSame = prevDeps.current.every((obj, index) => isEqual(obj, deps[index]));\n\n    if (isFirst.current || !isSame) {\n      effectFunc();\n    }\n\n    isFirst.current = false;\n    prevDeps.current = deps;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n"],"names":["createBrand","body","axios","getBrands","params","signal","editBrand","id","getLookupStocks","getLookupStocksProduct","getOrders","getOrderDetail","getOrdersReport","getOrdersReportSummary","createOrder","updateOrder","createOrderProduct","deleteOrderProduct","syncProductOrder","orderId","orderTrxItemId","readOrder","cancelOrder","createProducts","getProducts","editProduct","deleteProduct","searchProductType","getProductCountEstimation","orderCode","productCode","createType","getTypes","getTypeDetail","editType","deleteType","getUnits","createUser","getUsers","editUser","deleteUser","getVariants","createVariant","editVariant","deleteVariant","HeaderBreadcrumbs","action","heading","moreLink","sx","useBadge","badgeCount","mb","display","alignItems","flexGrow","variant","marginRight","color","flexShrink","mt","isString","href","target","rel","map","noWrap","getRoles","InfiniteCombobox","React","label","type","onChange","value","additionalQuery","useStaticOption","staticOptions","autoFocus","useCreateOnEnter","labelText","excludeIds","other","useState","inputValue","setInputValue","useDebounce","inputValueDebounce","options","setOptions","selectedId","setSelectedId","totalPage","setTotalPage","currentPage","setCurrentPage","isOpen","setIsOpen","onLoadMore","setOnLoadMore","selectedValueLabel","find","option","queryFn","getRestructuredOptions","optionsData","length","brand","unit","code","role","name","getFilteredOptions","newOptions","filter","opt","includes","appendAdditionalQuery","getOptionsHandler","query","pageSize","page","search","data","meta","restructuredData","filteredOptions","info","loadMoreOptionsHandler","prev","getRoleIdCustomers","user","onKeyDownHandler","e","roleId","effectFunc","deps","isFirst","useRef","prevDeps","useEffect","isSame","current","every","obj","index","isEqual","useDeepEffect","setTimeout","listBox","document","querySelector","scrollHeight","clientHeight","Autocomplete","onOpen","onClose","noOptionsText","onInputChange","newValue","renderInput","TextField","onKeyDown","renderOption","props","Box","component","key","ListboxProps","onScroll","currentTarget","loadMoreValidator","ListboxComponent","ListBox","forwardRef","ref","children","rest","innerRef","useImperativeHandle","Scrollbar","whyDidYouRender"],"sourceRoot":""}