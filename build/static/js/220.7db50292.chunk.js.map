{"version":3,"file":"static/js/220.7db50292.chunk.js","mappings":"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","sources":["components/ConditionalWrapper.js","components/combobox/ComboboxUnits.js","components/modal/Modal.js","constant/queryKey.js","hooks/useForm.js","components/modal/attribute/ModalCreateEditAttribute.js","components/attribute/AttributeList.js","api/useAttributeTypesClient.js","components/modal/brand/ModalCreateEditBrand.js","components/modal/variant/ModalCreateEditVariant.js","components/attribute/AttributeBrand.js","api/useAttributeBrandClient.js","pages/AttributePage.js"],"sourcesContent":["const ConditionalWrapper = ({ condition, wrapper, children }) => {\n  return condition ? wrapper(children) : children;\n};\n\nexport default ConditionalWrapper;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { TextField, Autocomplete } from '@mui/material';\nimport { getUnits } from '../../client/unitsClient';\n\nconst ComboboxUnits = ({ onChange, defaultValue, label = 'Unit' }) => {\n  const [units, setUnits] = useState([]);\n\n  const options = useCallback(() => {\n    return units?.map((unit) => {\n      return {\n        label: unit?.unit,\n        id: unit?.id,\n      };\n    });\n  }, [units]);\n\n  const defaultAutoCompleteValue = options()?.find((option) => option.id === defaultValue);\n\n  const getUnitsHandler = async () => {\n    const { data } = await getUnits();\n    if (data) {\n      setUnits(data);\n    }\n  };\n\n  const onChangeHandler = (e, newValue) => {\n    onChange(newValue);\n  };\n\n  useEffect(() => {\n    getUnitsHandler();\n  }, []);\n\n  return units?.length > 0 ? (\n    <Autocomplete\n      disablePortal\n      id=\"combo-box-units\"\n      options={options()}\n      onChange={onChangeHandler}\n      defaultValue={defaultAutoCompleteValue}\n      renderInput={(params) => <TextField {...params} label={label} />}\n    />\n  ) : (\n    <></>\n  );\n};\n\nexport default ComboboxUnits;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DialogTitle, Box, Button } from '@mui/material';\n\nimport { DialogAnimate } from '../animate';\n\nimport Label from '../Label';\nimport Iconify from '../Iconify';\n\nModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nfunction Modal({ title, open, onClose, maxWidth, children, badgeCount, useBadge, headerButtonComponent }) {\n  return (\n    <DialogAnimate open={open} onClose={onClose} maxWidth={maxWidth}>\n      <Box sx={{ flexGrow: 1, display: 'flex', alignItems: 'center' }}>\n        <DialogTitle sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n          <Box>\n            {title}{' '}\n            {useBadge && (\n              <Label variant=\"ghost\" color=\"error\" sx={{ marginLeft: '8px' }}>\n                {badgeCount}\n              </Label>\n            )}\n          </Box>\n          {headerButtonComponent && headerButtonComponent}\n          {/* {headerButton && (\n            <Button\n              variant=\"outlined\"\n              startIcon={<Iconify icon={headerButton?.iconName} />}\n              onClick={(e) => headerButton?.onClick && headerButton?.onClick(e)}\n            >\n              {headerButton?.text}\n            </Button>\n          )} */}\n        </DialogTitle>\n      </Box>\n\n      {children}\n    </DialogAnimate>\n  );\n}\n\nexport default Modal;\n","const KEY = {\n  attribute: {\n    types: {\n      all: 'types',\n      detail: 'type',\n    },\n    brands: {\n      all: 'brands',\n      detail: 'brand',\n    },\n  },\n  products: {\n    all: 'products',\n  },\n};\n\nexport default KEY;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      return {\n        ...state,\n        [action.inputId]: action.value,\n      };\n\n    case 'SET_DATA':\n      return {\n        ...state,\n        ...action.inputData,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs) => {\n  const [formState, dispatch] = useReducer(formReducer, initialInputs);\n\n  const inputChangeHandler = useCallback((id, value) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputData,\n    });\n  }, []);\n\n  return [formState, inputChangeHandler, setFormData];\n};\n","import React, { useEffect, useState } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport parseInt from 'lodash/parseInt';\nimport { Stack, TextField, DialogActions, Button } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { toast } from 'react-toastify';\nimport Modal from '../Modal';\nimport ComboboxUnits from '../../combobox/ComboboxUnits';\nimport { createType, editType } from '../../../client/typesClient';\nimport { useForm } from '../../../hooks/useForm';\nimport KEY from '../../../constant/queryKey';\n\nexport const ModalCreateEditAttribute = ({ open, onClose, editData, editId }) => {\n  const title = editData ? 'Edit Tipe' : 'Tambah Tipe';\n\n  return (\n    <Modal title={title} open={open} onClose={onClose}>\n      <DialogForm onClose={onClose} editData={editData} editId={editId} />\n    </Modal>\n  );\n};\n\nconst DialogForm = ({ onClose, editData, editId }) => {\n  const [formState, inputChangeHandler, setFormData] = useForm(initialFormInput);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const queryClient = useQueryClient();\n\n  const isButtonDisabled = formState?.unitId === '' || formState?.value === '';\n\n  const submitModalHandler = async (e) => {\n    setIsSubmitting(true);\n\n    e.preventDefault();\n    const body = {\n      ...formState,\n      value: parseInt(formState.value),\n    };\n    const { isSuccess } = editData ? await editType(editId, body) : await createType(body);\n    if (isSuccess) {\n      toast.success(`Berhasil ${editData ? 'mengubah' : 'menambahkan'} tipe`);\n      onClose();\n\n      queryClient.invalidateQueries([KEY.attribute.types.all], { refetchType: editData ? 'none' : 'active' });\n\n      if (editData) {\n        queryClient.invalidateQueries([KEY.attribute.types.detail, editId]);\n      }\n    }\n\n    setIsSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (editData) {\n      setFormData(editData);\n    }\n  }, [editData, setFormData]);\n\n  return (\n    <Stack component=\"form\" onSubmit={submitModalHandler}>\n      <Stack spacing={3} sx={{ p: 3 }}>\n        <ComboboxUnits\n          label=\"Unit (*)\"\n          defaultValue={formState?.unitId}\n          onChange={(e) => inputChangeHandler('unitId', e.id)}\n        />\n        <TextField\n          value={formState?.value}\n          type=\"number\"\n          id=\"value\"\n          label=\"Value (*)\"\n          variant=\"outlined\"\n          onChange={(e) => inputChangeHandler('value', e.target.value)}\n        />\n      </Stack>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Close\n        </Button>\n\n        <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} disabled={isButtonDisabled}>\n          Save\n        </LoadingButton>\n      </DialogActions>\n    </Stack>\n  );\n};\n\nconst initialFormInput = {\n  // code: '',\n  unitId: '',\n  value: '',\n};\n","import React, { useState, useEffect } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport {\n  Box,\n  Card,\n  Table,\n  Button,\n  TableBody,\n  IconButton,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  TableCell,\n  TableHead,\n  Stack,\n  TextField,\n  InputAdornment,\n  TableSortLabel,\n  Tooltip,\n} from '@mui/material';\n\nimport { useConfirm } from 'material-ui-confirm';\nimport { useDebounce } from 'use-debounce';\nimport { toast } from 'react-toastify';\n\nimport KEY from '../../constant/queryKey';\nimport { useTypeDetail, useTypes } from '../../api/useAttributeTypesClient';\nimport Iconify from '../Iconify';\nimport Scrollbar from '../Scrollbar';\nimport HeaderBreadcrumbs from '../HeaderBreadcrumbs';\nimport ConditionalWrapper from '../ConditionalWrapper';\nimport { ModalCreateEditAttribute } from '../modal/attribute/ModalCreateEditAttribute';\n\nimport { deleteType } from '../../client/typesClient';\n\nconst AttributeList = () => {\n  const queryClient = useQueryClient();\n\n  const [orderBy, setOrderBy] = useState('created_at');\n  const [order, setOrder] = useState('desc');\n\n  const [search, setSearch] = useState('');\n  const [searchDebounce] = useDebounce(search, 300);\n\n  const [editData, setEditData] = useState(null);\n  const [editId, setEditId] = useState(null);\n\n  const [types, setTypes] = useState([]);\n  const [paginationMeta, setPaginationMeta] = useState(null);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowPerPage] = useState(5);\n  const [showModal, setShowModal] = useState(false);\n\n  const showModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n    setEditData(null);\n    setEditId(null);\n  };\n\n  const rowsPerPageChangeHandler = (e) => {\n    setRowPerPage(e.target.value);\n  };\n\n  const onChangeSearchHandler = (e) => {\n    setSearch(e.target.value);\n    setPage(0);\n  };\n\n  const pageChangeHandler = (e, newValue) => {\n    setPage(newValue);\n  };\n\n  const onSortHandler = (property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const resetEditState = () => {\n    setEditData(null);\n    setEditId(null);\n  };\n\n  const appendSortQuery = () => {\n    return {\n      [order === 'asc' ? 'ascField' : 'dscField']: orderBy,\n    };\n  };\n\n  const queryParams = {\n    page: page + 1,\n    pageSize: rowsPerPage,\n    search: searchDebounce,\n    ...(order && appendSortQuery()),\n  };\n\n  const { data } = useTypes(queryParams);\n\n  useEffect(() => {\n    if (data?.data) {\n      setTypes(data?.data || []);\n      setPaginationMeta(data?.meta?.info);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    return () => {\n      queryClient.cancelQueries([KEY.attribute.types.all]);\n    };\n  }, []);\n\n  return (\n    <>\n      <HeaderBreadcrumbs\n        heading=\"Tipe\"\n        useBadge\n        badgeCount={paginationMeta?.count || 0}\n        action={\n          <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />} onClick={showModalHandler}>\n            Tambah\n          </Button>\n        }\n      />\n\n      <Card>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ py: 2.5, px: 3 }}>\n          <TextField\n            value={search}\n            onChange={onChangeSearchHandler}\n            placeholder=\"Cari...\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Iconify icon={'eva:search-fill'} sx={{ color: 'text.disabled', width: 20, height: 20 }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Stack>\n        <Scrollbar>\n          <TableContainer sx={{ minWidth: 720 }}>\n            <Table>\n              <TableHeadComponent orderBy={orderBy} order={order} onSortHandler={onSortHandler} />\n              <TableBody>\n                {types.map((row, index) => (\n                  <TableRowComponent\n                    key={row.id}\n                    number={index + 1 + page * rowsPerPage}\n                    row={row}\n                    setEditData={setEditData}\n                    setEditId={setEditId}\n                    showModalHandler={showModalHandler}\n                  />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Scrollbar>\n        <Box sx={{ position: 'relative' }}>\n          <TablePagination\n            rowsPerPageOptions={[3, 5, 10, 25]}\n            component=\"div\"\n            count={paginationMeta?.count || 0}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={pageChangeHandler}\n            onRowsPerPageChange={rowsPerPageChangeHandler}\n          />\n        </Box>\n      </Card>\n\n      <ModalCreateEditAttribute\n        open={showModal}\n        onClose={closeModalHandler}\n        editData={editData}\n        editId={editId}\n        resetEditState={resetEditState}\n      />\n    </>\n  );\n};\n\nconst TableRowComponent = ({ number, row, setEditData, setEditId, showModalHandler }) => {\n  const confirm = useConfirm();\n  const queryClient = useQueryClient();\n\n  const { data } = useTypeDetail(row.id, {\n    initialData: row,\n  });\n\n  const typeDetail = data?.data ? data?.data : data;\n\n  const onClickEditHandler = (data) => {\n    setEditData({\n      code: data?.code,\n      unitId: data?.unitId,\n      value: data?.value,\n    });\n    setEditId(data?.id);\n    showModalHandler();\n  };\n\n  const onClickDeleteHandler = (id) => {\n    confirm().then(async () => {\n      const { isSuccess } = await deleteType(id);\n      if (isSuccess) {\n        toast.success('Berhasil menghapus tipe');\n        queryClient.invalidateQueries(KEY.attribute.types.all);\n      }\n    });\n  };\n\n  return (\n    <TableRow>\n      <TableCell>{number}</TableCell>\n      <TableCell>{typeDetail?.code}</TableCell>\n      <TableCell>{typeDetail?.unit?.unit}</TableCell>\n      <TableCell>{typeDetail?.value}</TableCell>\n      <TableCell>\n        <Tooltip title=\"Edit Tipe\">\n          <IconButton size=\"small\" color=\"warning\" onClick={() => onClickEditHandler(typeDetail)}>\n            <Iconify icon=\"eva:edit-fill\" />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Delete Tipe\">\n          <IconButton size=\"small\" color=\"error\" onClick={() => onClickDeleteHandler(typeDetail?.id)}>\n            <Iconify icon=\"eva:trash-2-outline\" />\n          </IconButton>\n        </Tooltip>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst TableHeadComponent = ({ orderBy, order, onSortHandler }) => {\n  const onClickSortHandler = (property) => {\n    onSortHandler(property);\n  };\n\n  const headCells = [\n    {\n      id: 'no',\n      label: 'No',\n      withSort: false,\n    },\n    {\n      id: 'code',\n      label: 'Kode',\n      withSort: true,\n    },\n    {\n      id: 'unit',\n      label: 'Unit',\n      withSort: true,\n    },\n    {\n      id: 'value',\n      label: 'Value',\n      withSort: true,\n    },\n    {\n      id: 'action',\n      label: 'Aksi',\n      withSort: false,\n    },\n  ];\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell key={headCell.id}>\n            <ConditionalWrapper\n              condition={headCell.withSort}\n              wrapper={(children) => (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={() => onClickSortHandler(headCell.id)}\n                >\n                  {children}\n                </TableSortLabel>\n              )}\n            >\n              {headCell.label}\n            </ConditionalWrapper>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default AttributeList;\n","import { useQuery } from '@tanstack/react-query';\nimport { getTypeDetail, getTypes } from '../client/typesClient';\n\nimport KEY from '../constant/queryKey';\n\nconst useTypes = (queryParams) => {\n  const fetchTypes = ({ signal }) => {\n    return getTypes(queryParams, signal);\n  };\n\n  return useQuery([KEY.attribute.types.all, queryParams], fetchTypes, {\n    staleTime: 5 * 60 * 1000,\n  });\n};\n\nconst useTypeDetail = (typeId, queryConfig = {}) => {\n  const fetchTypeDetail = () => {\n    return getTypeDetail(typeId);\n  };\n\n  return useQuery([KEY.attribute.types.detail, typeId], fetchTypeDetail, {\n    staleTime: Infinity,\n    ...queryConfig,\n  });\n};\n\nexport { useTypes, useTypeDetail };\n","import React, { useEffect, useState } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { Stack, TextField, DialogActions, Button } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { toast } from 'react-toastify';\nimport Modal from '../Modal';\nimport { createBrand, editBrand } from '../../../client/brandsClient';\nimport { useForm } from '../../../hooks/useForm';\nimport InfiniteCombobox from '../../combobox/InfiniteCombobox';\n\nimport KEY from '../../../constant/queryKey';\n\nexport const ModalCreateEditBrand = ({ open, onClose, editData, editId }) => {\n  const title = editData ? 'Edit Brand' : 'Tambah Brand';\n\n  return (\n    <Modal title={title} open={open} onClose={onClose}>\n      <DialogForm onClose={onClose} editData={editData} editId={editId} />\n    </Modal>\n  );\n};\n\nconst DialogForm = ({ onClose, editData, editId }) => {\n  const queryClient = useQueryClient();\n\n  const [formState, inputChangeHandler, setFormData] = useForm(initialFormInput);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [supplierLabel, setSupplierLabel] = useState(null);\n\n  const { brand, supplierId } = formState;\n\n  const isButtonDisabled = brand === '';\n\n  const submitModalHandler = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    const { isSuccess } = editData ? await editBrand(editId, formState) : await createBrand(formState);\n    if (isSuccess) {\n      toast.success(`Berhasil ${editData ? 'mengubah' : 'menambahkan'} brand`);\n      onClose();\n\n      queryClient.invalidateQueries([KEY.attribute.brands.all]);\n    }\n\n    setIsSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (editData) {\n      setFormData({\n        brand: editData?.brandName,\n        supplierId: editData?.supplierId,\n      });\n      setSupplierLabel(editData?.supplierName);\n    }\n  }, [editData, setFormData]);\n\n  return (\n    <Stack component=\"form\" onSubmit={submitModalHandler}>\n      <Stack spacing={3} sx={{ p: 3 }}>\n        <TextField\n          value={brand}\n          id=\"outlined-basic\"\n          label=\"Brand (*)\"\n          variant=\"outlined\"\n          onChange={(e) => inputChangeHandler('brand', e.target.value)}\n        />\n        <InfiniteCombobox\n          value={supplierId}\n          label={`Supplier`}\n          sx={{ marginBottom: '20px' }}\n          type=\"users\"\n          additionalQuery={{ filterRole: 'supplier' }}\n          onChange={(e) => {\n            inputChangeHandler('supplierId', e?.id);\n            setSupplierLabel(e?.label);\n          }}\n          labelText={supplierLabel}\n        />\n      </Stack>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Close\n        </Button>\n        <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} disabled={isButtonDisabled}>\n          Save\n        </LoadingButton>\n      </DialogActions>\n    </Stack>\n  );\n};\n\nconst initialFormInput = {\n  supplierId: '',\n  brand: '',\n};\n","import React, { useEffect, useState } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { Stack, TextField, DialogActions, Button } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { toast } from 'react-toastify';\n\nimport Modal from '../Modal';\n\nimport { createVariant, editVariant } from '../../../client/variantsClient';\nimport { useForm } from '../../../hooks/useForm';\n\nimport KEY from '../../../constant/queryKey';\n\nexport const ModalCreateEditVariant = ({ open, onClose, editVariantId, editVariantData, brandId }) => {\n  const title = editVariantData ? 'Edit Varian' : 'Tambah Varian';\n\n  return (\n    <Modal title={title} open={open} onClose={onClose}>\n      <DialogForm onClose={onClose} editVariantId={editVariantId} brandId={brandId} editVariantData={editVariantData} />\n    </Modal>\n  );\n};\n\nconst DialogForm = ({ onClose, editVariantId, brandId, editVariantData }) => {\n  const queryClient = useQueryClient();\n\n  const [formState, inputChangeHandler, setFormData] = useForm(initialFormInput);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const { code, variant, itl, uniqueCode } = formState;\n\n  const isButtonDisabled = variant === '' || itl === '';\n\n  const submitModalHandler = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    const body = {\n      ...formState,\n      brandId,\n    };\n\n    if (editVariantId) {\n      delete body.brandId;\n    }\n\n    if (!editVariantData) {\n      delete body.code;\n    }\n\n    const { isSuccess } = editVariantData ? await editVariant(editVariantId, body) : await createVariant(body);\n    if (isSuccess) {\n      toast.success(`Berhasil ${editVariantData ? 'mengubah' : 'menambahkan'} varian`);\n      onClose();\n      queryClient.invalidateQueries([KEY.attribute.brands.all]);\n    }\n\n    setIsSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (editVariantData) {\n      setFormData(editVariantData);\n    }\n  }, [editVariantData, setFormData]);\n\n  return (\n    <Stack component=\"form\" onSubmit={submitModalHandler}>\n      <Stack spacing={3} sx={{ p: 3 }}>\n        {editVariantId && (\n          <TextField\n            value={code}\n            label=\"Kode (*)\"\n            variant=\"outlined\"\n            onChange={(e) => inputChangeHandler('code', e.target.value)}\n            disabled={editVariantId != null}\n          />\n        )}\n        <TextField\n          value={variant}\n          label=\"Varian (*)\"\n          variant=\"outlined\"\n          onChange={(e) => inputChangeHandler('variant', e.target.value)}\n        />\n        <TextField\n          value={itl}\n          label=\"ITL (*)\"\n          variant=\"outlined\"\n          onChange={(e) => inputChangeHandler('itl', e.target.value)}\n        />\n        <TextField\n          value={uniqueCode}\n          id=\"outlined-basic\"\n          label=\"Kode Unik\"\n          variant=\"outlined\"\n          onChange={(e) => inputChangeHandler('uniqueCode', e.target.value)}\n        />\n      </Stack>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Close\n        </Button>\n\n        <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} disabled={isButtonDisabled}>\n          Save\n        </LoadingButton>\n      </DialogActions>\n    </Stack>\n  );\n};\n\nconst initialFormInput = {\n  code: '',\n  variant: '',\n  itl: '',\n  uniqueCode: '',\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDebounce } from 'use-debounce';\nimport { useConfirm } from 'material-ui-confirm';\nimport { toast } from 'react-toastify';\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport {\n  Box,\n  Card,\n  Table,\n  Button,\n  TableBody,\n  IconButton,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  TableCell,\n  TableHead,\n  Stack,\n  TextField,\n  InputAdornment,\n  TableSortLabel,\n  Tooltip,\n} from '@mui/material';\n\nimport Iconify from '../Iconify';\nimport Scrollbar from '../Scrollbar';\nimport HeaderBreadcrumbs from '../HeaderBreadcrumbs';\nimport ConditionalWrapper from '../ConditionalWrapper';\n\nimport { ModalCreateEditBrand } from '../modal/brand/ModalCreateEditBrand';\nimport { deleteVariant } from '../../client/variantsClient';\nimport { ModalCreateEditVariant } from '../modal/variant/ModalCreateEditVariant';\nimport { useAttributeBrands } from '../../api/useAttributeBrandClient';\n\nimport KEY from '../../constant/queryKey';\n\nconst AttributeBrand = () => {\n  const queryClient = useQueryClient();\n\n  const [orderBy, setOrderBy] = useState('created_at');\n  const [order, setOrder] = useState('desc');\n\n  const [search, setSearch] = useState('');\n  const [searchDebounce] = useDebounce(search, 300);\n\n  const [editBrandData, setEditBrandData] = useState(null);\n  const [brandId, setBrandId] = useState(null);\n\n  const [editVariantData, setEditVariantData] = useState(null);\n  const [editVariantId, setEditVariantId] = useState(null);\n\n  const [brands, setBrands] = useState([]);\n  const [paginationMeta, setPaginationMeta] = useState(null);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowPerPage] = useState(5);\n\n  const [showModalBrand, setShowModalBrand] = useState(false);\n  const [showModalVariant, setShowModalVariant] = useState(false);\n\n  const resetState = () => {\n    setEditBrandData(null);\n    setBrandId(null);\n\n    setEditVariantData(null);\n    setEditVariantId(null);\n  };\n\n  const showModalBrandHandler = () => {\n    setShowModalBrand(true);\n  };\n\n  const closeModalBrandHandler = () => {\n    setShowModalBrand(false);\n    resetState();\n  };\n\n  const closeModalVariantHandler = () => {\n    setShowModalVariant(false);\n    resetState();\n  };\n\n  const onSortHandler = (property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const rowsPerPageChangeHandler = (e) => {\n    setRowPerPage(e.target.value);\n  };\n\n  const onChangeSearchHandler = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const pageChangeHandler = (e, newValue) => {\n    setPage(newValue);\n  };\n\n  const appendSortQuery = () => {\n    return {\n      [order === 'asc' ? 'ascField' : 'dscField']: orderBy,\n    };\n  };\n\n  const queryParams = {\n    page: page + 1,\n    pageSize: rowsPerPage,\n    search: searchDebounce,\n    ...(order && appendSortQuery()),\n  };\n\n  const { data } = useAttributeBrands(queryParams);\n\n  useEffect(() => {\n    const restructuredData = [];\n    data?.data?.forEach((brand, brandIndex) => {\n      const variants = brand.variants?.length > 0 ? brand.variants : [1];\n      return variants?.map((variant, variantIndex) =>\n        restructuredData.push({\n          no: variantIndex === 0 ? variantIndex + brandIndex + 1 : null,\n          brandCodeName: variantIndex === 0 ? brand.code : null,\n          brandName: variantIndex === 0 ? brand.brand : null,\n          codeVariant: variant?.code,\n          variantName: variant?.variant,\n          variantItl: variant?.itl,\n          brandId: variantIndex === 0 ? brand.id : null,\n          variantId: variant?.id,\n          supplierName: variantIndex === 0 ? brand?.supplier?.name : null,\n          supplierId: brand?.supplierId,\n          uniqueCode: variant?.uniqueCode,\n        })\n      );\n    });\n\n    setBrands(restructuredData || []);\n    setPaginationMeta(data?.meta?.info);\n  }, [data]);\n\n  useEffect(() => {\n    return () => {\n      queryClient.cancelQueries([KEY.attribute.brands.all]);\n    };\n  }, []);\n\n  return (\n    <>\n      <HeaderBreadcrumbs\n        heading=\"Brand\"\n        useBadge\n        badgeCount={paginationMeta?.count || 0}\n        action={\n          <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />} onClick={showModalBrandHandler}>\n            Tambah\n          </Button>\n        }\n      />\n\n      <Card>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ py: 2.5, px: 3 }}>\n          <TextField\n            value={search}\n            onChange={onChangeSearchHandler}\n            placeholder=\"Cari...\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Iconify icon={'eva:search-fill'} sx={{ color: 'text.disabled', width: 20, height: 20 }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Stack>\n\n        <Scrollbar>\n          <TableContainer sx={{ minWidth: 720 }}>\n            <Table>\n              <TableHeadComponent orderBy={orderBy} order={order} onSortHandler={onSortHandler} />\n              <TableBody>\n                {brands?.map((row) => (\n                  <TableRowComponent\n                    key={row.id}\n                    number={row?.no && row?.no + page * rowsPerPage}\n                    row={row}\n                    setEditVariantData={setEditVariantData}\n                    setEditVariantId={setEditVariantId}\n                    setEditBrandData={setEditBrandData}\n                    setBrandId={setBrandId}\n                    showModalBrandHandler={showModalBrandHandler}\n                    setShowModalVariant={setShowModalVariant}\n                  />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Scrollbar>\n\n        <Box sx={{ position: 'relative' }}>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={paginationMeta?.count || 0}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={pageChangeHandler}\n            onRowsPerPageChange={rowsPerPageChangeHandler}\n          />\n        </Box>\n      </Card>\n      <ModalCreateEditBrand\n        open={showModalBrand}\n        onClose={closeModalBrandHandler}\n        editData={editBrandData}\n        editId={brandId}\n      />\n      <ModalCreateEditVariant\n        open={showModalVariant}\n        onClose={closeModalVariantHandler}\n        brandId={brandId}\n        editVariantData={editVariantData}\n        editVariantId={editVariantId}\n        // getBrandsHandler={getBrandsHandler}\n      />\n    </>\n  );\n};\n\nconst TableRowComponent = ({\n  number,\n  row,\n  setEditVariantData,\n  setEditVariantId,\n  setEditBrandData,\n  setBrandId,\n  showModalBrandHandler,\n  setShowModalVariant,\n}) => {\n  const confirm = useConfirm();\n\n  const onClickEditVariantHandler = (row) => {\n    showModalVariantHandler();\n    setEditVariantData({\n      code: row?.codeVariant,\n      variant: row?.variantName,\n      itl: row?.variantItl,\n      uniqueCode: row?.uniqueCode,\n    });\n    setEditVariantId(row?.variantId);\n  };\n\n  const onClickDeleteVariantHandler = (id) => {\n    confirm().then(async () => {\n      const { isSuccess } = await deleteVariant(id);\n      if (isSuccess) {\n        toast.success('Berhasil menghapus tipe');\n        // getBrandsHandler();\n      }\n    });\n  };\n\n  const onClickEditBrandHandler = (data) => {\n    setEditBrandData(data);\n    setBrandId(data?.brandId);\n    showModalBrandHandler();\n  };\n\n  const showModalVariantHandler = (row) => {\n    setShowModalVariant(true);\n    setBrandId(row?.brandId);\n  };\n\n  return (\n    <TableRow>\n      <TableCell>{number}</TableCell>\n      <TableCell>{row?.brandCodeName}</TableCell>\n      <TableCell>{row?.brandName}</TableCell>\n      <TableCell>{row?.supplierName}</TableCell>\n      <TableCell>{row?.codeVariant}</TableCell>\n      <TableCell>{row?.variantName}</TableCell>\n      <TableCell>{row?.variantItl}</TableCell>\n      <TableCell>{row?.uniqueCode}</TableCell>\n      <TableCell>\n        {row?.codeVariant && row?.variantName && (\n          <>\n            <Tooltip title=\"Edit Varian\">\n              <IconButton size=\"small\" color=\"warning\" onClick={() => onClickEditVariantHandler(row)}>\n                <Iconify icon=\"eva:edit-fill\" />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Delete Varian\">\n              <IconButton size=\"small\" color=\"error\" onClick={() => onClickDeleteVariantHandler(row?.variantId)}>\n                <Iconify icon=\"eva:trash-2-outline\" />\n              </IconButton>\n            </Tooltip>\n          </>\n        )}\n      </TableCell>\n      <TableCell>\n        {row?.no && (\n          <>\n            <Tooltip title=\"Edit Brand\">\n              <IconButton size=\"small\" color=\"warning\" onClick={() => onClickEditBrandHandler(row)}>\n                <Iconify icon=\"eva:edit-fill\" />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Tambah Variant\">\n              <IconButton size=\"small\" color=\"primary\" onClick={() => showModalVariantHandler(row)}>\n                <Iconify icon=\"eva:plus-outline\" />\n              </IconButton>\n            </Tooltip>\n          </>\n        )}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst TableHeadComponent = ({ orderBy, order, onSortHandler }) => {\n  const onClickSortHandler = (property) => {\n    onSortHandler(property);\n  };\n\n  const headCells = [\n    {\n      id: 'no',\n      label: 'No',\n      withSort: false,\n    },\n    {\n      id: 'code',\n      label: 'Kode',\n      withSort: true,\n    },\n    {\n      id: 'brand',\n      label: 'Brand',\n      withSort: true,\n    },\n    {\n      id: 'supplier_name',\n      label: 'Nama Supplier',\n      withSort: false,\n    },\n    {\n      id: 'variant_code',\n      label: 'Kode Varian',\n      withSort: false,\n    },\n    {\n      id: 'variant',\n      label: 'Varian',\n      withSort: false,\n    },\n    {\n      id: 'itl',\n      label: 'ITL',\n      withSort: false,\n    },\n    {\n      id: 'code_unique',\n      label: 'Kode Unik',\n      withSort: false,\n    },\n    {\n      id: 'variant_action',\n      label: 'Aksi Varian',\n      withSort: false,\n    },\n    {\n      id: 'action',\n      label: 'Aksi',\n      withSort: false,\n    },\n  ];\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell key={headCell.id}>\n            <ConditionalWrapper\n              condition={headCell.withSort}\n              wrapper={(children) => (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={() => onClickSortHandler(headCell.id)}\n                >\n                  {children}\n                </TableSortLabel>\n              )}\n            >\n              {headCell.label}\n            </ConditionalWrapper>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default AttributeBrand;\n","import { useQuery } from '@tanstack/react-query';\nimport { getBrandDetail, getBrands } from '../client/brandsClient';\n\nimport KEY from '../constant/queryKey';\n\nconst useAttributeBrands = (queryParams) => {\n  const fetchBrands = ({ signal }) => {\n    return getBrands(queryParams, signal);\n  };\n\n  return useQuery([KEY.attribute.brands.all, queryParams], fetchBrands, {\n    staleTime: 5 * 60 * 1000,\n  });\n};\n\nconst useAttributeBrandDetail = (brandId, queryConfig = {}) => {\n  const fetchBrandDetail = () => {\n    return getBrandDetail(brandId);\n  };\n\n  return useQuery([KEY.attribute.brands.detail, brandId], fetchBrandDetail, {\n    staleTime: 5 * 60 * 1000,\n    ...queryConfig,\n  });\n};\n\nexport { useAttributeBrands, useAttributeBrandDetail };\n","// @mui\nimport { Container, Stack } from '@mui/material';\n\n// hooks\nimport useSettings from '../hooks/useSettings';\n\nimport Page from '../components/Page';\n\nimport AttributeList from '../components/attribute/AttributeList';\nimport AttributeBrand from '../components/attribute/AttributeBrand';\n\nexport default function AttributeApp() {\n  const { themeStretch } = useSettings();\n\n  return (\n    <Page title=\"Atribut\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <AttributeList />\n\n        <Stack sx={{ marginTop: '50px' }} />\n\n        <AttributeBrand />\n      </Container>\n    </Page>\n  );\n}\n"],"names":["condition","wrapper","children","onChange","defaultValue","label","useState","units","setUnits","options","useCallback","map","unit","id","defaultAutoCompleteValue","find","option","getUnitsHandler","getUnits","data","useEffect","length","disablePortal","e","newValue","renderInput","params","title","open","onClose","maxWidth","badgeCount","useBadge","headerButtonComponent","sx","flexGrow","display","alignItems","justifyContent","width","variant","color","marginLeft","attribute","types","all","detail","brands","products","formReducer","state","action","type","inputId","value","inputData","useForm","initialInputs","useReducer","formState","dispatch","ModalCreateEditAttribute","editData","editId","Modal","DialogForm","initialFormInput","inputChangeHandler","setFormData","isSubmitting","setIsSubmitting","queryClient","useQueryClient","isButtonDisabled","unitId","submitModalHandler","preventDefault","body","parseInt","editType","createType","isSuccess","toast","invalidateQueries","KEY","refetchType","Stack","component","onSubmit","spacing","p","ComboboxUnits","TextField","target","DialogActions","Button","onClick","LoadingButton","loading","disabled","TableRowComponent","number","row","setEditData","setEditId","showModalHandler","confirm","useConfirm","typeId","queryConfig","fetchTypeDetail","getTypeDetail","useQuery","staleTime","Infinity","useTypeDetail","initialData","typeDetail","TableRow","TableCell","code","Tooltip","IconButton","size","onClickEditHandler","Iconify","icon","then","deleteType","TableHeadComponent","orderBy","order","onSortHandler","TableHead","withSort","headCell","ConditionalWrapper","TableSortLabel","active","direction","property","setOrderBy","setOrder","search","setSearch","useDebounce","searchDebounce","setTypes","paginationMeta","setPaginationMeta","page","setPage","rowsPerPage","setRowPerPage","showModal","setShowModal","queryParams","signal","getTypes","useTypes","pageSize","meta","info","cancelQueries","HeaderBreadcrumbs","heading","count","startIcon","Card","py","px","placeholder","InputProps","startAdornment","InputAdornment","position","height","Scrollbar","TableContainer","minWidth","Table","TableBody","index","Box","TablePagination","rowsPerPageOptions","onPageChange","onRowsPerPageChange","resetEditState","ModalCreateEditBrand","supplierLabel","setSupplierLabel","brand","supplierId","editBrand","createBrand","brandName","supplierName","InfiniteCombobox","marginBottom","additionalQuery","filterRole","labelText","ModalCreateEditVariant","editVariantId","editVariantData","brandId","itl","uniqueCode","editVariant","createVariant","setEditVariantData","setEditVariantId","setEditBrandData","setBrandId","showModalBrandHandler","setShowModalVariant","showModalVariantHandler","brandCodeName","codeVariant","variantName","variantItl","variantId","onClickEditVariantHandler","deleteVariant","no","editBrandData","setBrands","showModalBrand","setShowModalBrand","showModalVariant","resetState","getBrands","useAttributeBrands","restructuredData","forEach","brandIndex","variants","variantIndex","push","supplier","name","AttributeApp","themeStretch","useSettings","Page","Container","marginTop"],"sourceRoot":""}